@model Ivap.Areas.Master.Models.CurrencyModel
@using Ivap.Repository
@{
    ViewBag.Title = "Currency";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-default">
    <div class="pull-right VendorSiteBtnRightMain">
        @if (AuthorizationRepo.IsValidAction("ViewCurrency", "ViewAction"))
        {
            <button type="button" id="dvExport" class="btn btn-primary TransparantBtnBlue">Export Excel</button>
        }
        @if (AuthorizationRepo.IsValidAction("ViewCurrency", "CreateAction"))
        {
            <button type="button" id="add" class="btn btn-primary BtnBlueLg BtnWidth150">Create New</button>
        }
        @*@{Html.RenderAction("RenderMasterButton", "Authorization", new { RouteName = "ViewCurrency", area = string.Empty });}*@
    </div>
    <div class="panel-heading"><h3><strong>@Model.Screen_Name Master</strong></h3></div>
    <div class="panel-body">
        <div class="clear20"></div>
        <div class="TableOuterDiv table-responsive">
            <div id="Kgrid"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>

<section class="content">
    <!-- Info boxes -->
    <!-- /.row -->
    <!-- /.box-header -->
    <div id="CurrencyDetails" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">@Model.Screen_Name Details</h4>
                </div>
                <div class="modal-body">
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab_1" data-toggle="tab" aria-expanded="true">Detail</a></li>
                            <li class=""><a href="#tab_2" data-toggle="tab" aria-expanded="false">History</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab_1">
                                <table id="example2" class="table table-bordered table-hover">
                                    <tbody>
                                        <tr>
                                            <td><label>@Model.CURRENCY_CODE_TEXT</label> </td>
                                            <td><span id="lblCurrencyCode"> </span></td>
                                            <td><label>@Model.CURRENCY_NAME_TEXT</label> </td>
                                            <td><span id="lblCurrencyName"> </span></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_2">
                                <div id="GridHis"></div>
                            </div>
                            <!-- /.tab-pane -->
                            <!-- /.tab-pane -->
                        </div>
                        <!-- /.tab-content -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="dvCurrencyAddEdit" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Currency Master</h4>
                </div>
                @using (Ajax.BeginForm("AddUpdate", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SuccessMessage", InsertionMode = InsertionMode.Replace }))
                {@Html.AntiForgeryToken()
                <div class="modal-body horizontalscroll">
                    <div class="row form-group">
                        <label for="inputEmail3" class="col-sm-4 control-label">@Model.CURRENCY_CODE_TEXT<span class="text-red">*</span></label>
                        <div class="col-sm-8">
                            @Html.HiddenFor(m => m.CID)
                            @Html.TextBoxFor(m => m.CURRENCY_CODE, new { @class = "form-control", @placeholder = "Currency Code" })
                            @Html.ValidationMessageFor(m => m.CURRENCY_CODE)
                        </div>

                    </div>
                    <div class="row form-group">
                        <label for="inputEmail3" class="col-sm-4 control-label">@Model.CURRENCY_NAME_TEXT<span class="text-red">*</span></label>
                        <div class="col-sm-8">

                            @Html.TextBoxFor(m => m.CURRENCY_NAME, new { @class = "form-control", @placeholder = "Currency Name" })
                            @Html.ValidationMessageFor(m => m.CURRENCY_NAME)
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="inputPassword3" class="col-sm-4 control-label">Is Active</label>
                        <div class="col-sm-8">
                            @Html.CheckBoxFor(m => m.IsActive)
                        </div>
                    </div>

                </div>
                <div class="clear20"></div>
                <div class="col-md-12">
                    <input type="reset" id="btnReset" value="Reset" class="btn btn-primary BtnWhiteLg BtnWidth150" />
                    <input type="submit" id="btnSubmit" class="btn btn-primary BtnBlueLg BtnWidth150" value="Submit" />
                </div>
                <div class="clear20"></div>
            }
            </div>
        </div>
    </div>
</section>
@section scripts{
    @Scripts.Render("~/Scripts/commanscript")
    <script type="text/javascript">
        var GetCurrencyURL = "@Url.RouteUrl("GetCurrency")"
         var GetCurrencyHisURL = '@Url.RouteUrl("GetCurrencyHis")'
         var DownloadAllCurrencyURL= '@Url.RouteUrl("DownloadAllCurrency")'
       var Model = @Html.Raw(Json.Encode(Model));

    </script>

    @Scripts.Render("~/Scripts/CurrencyScript")

}

