@model Ivap.Areas.Configuration.Models.GlobalComponentModel
@{
    ViewBag.Title = "Component";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="panel panel-default">
    <div class="pull-right VendorSiteBtnRightMain">
        @*@{Html.RenderAction("RenderMasterButton", "Authorization", new { RouteName = "ViewUser", area = string.Empty });}*@
        @*<button type="button" id="dvimport" class="btn btn-primary TransparantBtnBlue">Import Excel</button>
            <button type="button" id="dvExport" class="btn btn-primary TransparantBtnBlue">Export Excel</button>*@
        <button type="button" id="add" class="btn btn-primary BtnBlueLg BtnWidth150">Create New</button>
    </div>
    <div class="panel-heading"><h3><strong>Component Master</strong></h3></div>
    <div class="panel-body">

        <div class="clear20"></div>
        <div class="TableOuterDiv table-responsive">
            <div id="Kgrd"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
@*</div>*@
<section class="content">
    <div id="tab" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Component</h4>
                </div>
                <div class="modal-body">
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab_1" data-toggle="tab" aria-expanded="true">Detail</a></li>
                            <li class=""><a href="#tab_2" data-toggle="tab" aria-expanded="false">History</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab_1">
                                <table id="example2" class="table table-bordered table-hover">
                                    <tbody>
                                        <tr>
                                            <td> <label>COMPONENT FILE TYPE</label> </td>
                                            <td><span id="lblComponentFileType"> </span></td>
                                            <td> <label>Component Type</label> </td>
                                            <td><span id="lblComponentType"></span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>COMPONENT_SUB_TYPE</label> </td>
                                            <td><span id="lblComponentSubType"> </span></td>
                                            <td> <label>COMPONENT_DATATYPE</label> </td>
                                            <td><span id="lblComponentDataType"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>COMPONENT_TABLE_NAME</label> </td>
                                            <td><span id="lblComponentTablename"> </span></td>
                                            <td> <label>COMPONENT_COLUMN_NAME</label> </td>
                                            <td><span id="lblComponentColumnName"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>COMPONENT_NAME</label> </td>
                                            <td><span id="lblComponentName"> </span></td>
                                            <td> <label>COMPONENT DISPLAY NAME</label> </td>
                                            <td><span id="lblCompDispName"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>COMPONENT DESCRIPTION</label> </td>
                                            <td><span id="lblCompDesc"> </span></td>
                                            <td> <label>MIN LENGTH</label> </td>
                                            <td><span id="lblMinLength"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>MAX LENGTH</label> </td>
                                            <td><span id="lblMaxLength"> </span></td>
                                            <td> <label>MANDATORY</label> </td>
                                            <td><span id="lblMandatory"> </span></td>
                                        </tr>

                                        <tr>
                                            <td> <label>ISACTIVE</label> </td>
                                            <td><span id="lblIsActive"> </span></td>
                                        </tr>
                                        @*<tr>
                                                <td> <label>Status</label> </td>
                                                <td><span id="lblStatus"></span></td>
                                            </tr>*@
                                    </tbody>
                                </table>

                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_2">
                                <div id="kgrdHistory"></div>
                            </div>
                            <!-- /.tab-pane -->
                            <!-- /.tab-pane -->
                        </div>
                        <!-- /.tab-content -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="dvAddUpdateComponent" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Component Master</h4>
                </div>
                @using (Ajax.BeginForm("AddUpdateComponent", new AjaxOptions { OnSuccess = "SuccessMessage", OnFailure = "FailMessage", OnBegin = "Validate" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body horizontalscroll">
                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">File Type<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.COMPONENT_FILE_TYPE, new SelectList(Model.Component_File_TypeList, "Value", "Text", "0"), new { @class = "form-control", @placeholder = "File Type" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_FILE_TYPE)
                            </div>
                            <label for="inputPassword3" class="col-sm-2 control-label">Component Type<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.COMPONENT_TYPE, new List<SelectListItem> { new SelectListItem { Text = "-- First select Component File Type  --", Value = "0" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_TYPE)
                            </div>
                        </div>

                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">Component Sub-Type<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.COMPONENT_SUB_TYPE, new List<SelectListItem> { new SelectListItem { Text = "-- First select Component Type  --", Value = "0" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_SUB_TYPE)
                            </div>
                            <label for="inputPassword3" class="col-sm-2 control-label">Data Type<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.COMPONENT_DATATYPE, new SelectList(Model.COMPONENT_DATATYPEList, "Value", "Text", "0"), new { @class = "form-control", @placeholder = "Component Data Type" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_DATATYPE)
                            </div>
                        </div>
                        <div class="row form-group" id="dvTableName" style="display:none">
                            <label for="inputPassword3" class="col-sm-2 control-label">Table Name<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.Component_TableName, new SelectList(Model.Component_TableNameList, "Value", "Text", "0"), new { @class = "form-control", @placeholder = "Table Name" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_FILE_TYPE)
                            </div>
                            <label for="inputPassword3" class="col-sm-2 control-label">Component Field Name<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.Component_FieldName, new List<SelectListItem> { new SelectListItem { Text = "-- First select Table Name  --", Value = "0" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_TYPE)
                            </div>
                        </div>
                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">Component Name<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.HiddenFor(m => m.COMPONENTID, new { id = "hdnCompnentID" })
                                @Html.TextBoxFor(m => m.COMPONENT_NAME, new { @class = "form-control", @placeholder = "Component Name" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_NAME)
                            </div>
                            <label for="inputPassword3" class="col-sm-2 control-label">Display Name<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.COMPONENT_DISPLAY_NAME, new { @class = "form-control", @placeholder = "Display Name" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_DISPLAY_NAME)
                            </div>

                        </div>
                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">Component Description<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.COMPONENT_DESCRIPTION, new { @class = "form-control", @placeholder = "Component Description" })
                                @Html.ValidationMessageFor(m => m.COMPONENT_DESCRIPTION)
                            </div>
                            <label for="inputPassword3" class="col-sm-2 control-label">Mandatory</label>
                            <div class="col-sm-4">
                                @Html.CheckBoxFor(m => m.MANDATORY)
                            </div>
                        </div>
                        <div class="row form-group" id="GdivMinMax" style="">
                            <label for="inputPassword3" class="col-sm-2 control-label">Min Length<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.MIN_LENGTH, new { @class = "form-control", @placeholder = "Min Length" })
                                @Html.ValidationMessageFor(m => m.MIN_LENGTH)
                            </div>
                            <label for="inputPassword3" class="col-sm-2 control-label">Max Length<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.MAX_LENGTH, new { @class = "form-control", @placeholder = "Max Length" })
                                @Html.ValidationMessageFor(m => m.MAX_LENGTH)
                            </div>


                        </div>
                        <div class="row form-group">

                            <label for="IsActive" class="col-sm-2 control-label">Is Active</label>
                            <div class="col-sm-4">
                                @Html.CheckBoxFor(m => m.IsActive)
                            </div>
                        </div>
                    </div>
                    <div class="clear10"></div>
                    <input type="reset" id="btnReset" value="Reset" class="btn btn-primary BtnWhiteLg BtnWidth150" />
                    <input type="submit" id="btnSubmit" class="btn btn-primary BtnBlueLg BtnWidth150" value="Submit" />
                    <div class="clear20"></div>
                }
            </div>
        </div>
    </div>


    <div id="Uploaddialog" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Upload Component</h4>
                </div>
                <div class="modal-body">
                    <div class="clearfix"></div>
                    <div class="row top_content">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="col-xs-12 col-sm-4 col-md-4">
                                <label>select a CSV file</label>
                            </div>
                            <div class="col-xs-12 col-sm-8 col-md-8 allcreditionals">
                                <input type="file" name="files" id="files" target-control="hdnFileName">
                                <input type="hidden" id="hdnFileName" />
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12 allcreditionals">

                                <div class="reset_btn" align="right">
                                    <input type="button" value="Sample" id="btnDownloadSample" class="btn btn-primary BtnBlueLg" onclick="DownLoadSampleCostCentre();" />
                                    <input type="button" value="Upload" id="btnUpload" class="btn btn-primary BtnBlueLg" />
                                </div>

                            </div>
                            @*</div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div id="log" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Upload Component</h4>
                </div>
                <div class="modal-body">
                    <div class="clearfix"></div>
                    <div class="row top_content">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="col-xs-12 col-sm-3 col-md-3 top_content">
                                <label class="headtag">Total Success</label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <label id="lblTotSuccess" class="feedback_content">500</label>
                            </div>

                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <label class="headtag">Total Loss</label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <label id="lblTotFailed" class="feedback_content"></label>
                            </div>

                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="reset_btn" align="right">
                                    <input type="hidden" id="hdnresultFile" />
                                    <input type="button" value="Download" onclick="DownLoadResultFile();" class="btn btn-danger" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="dvDeleteGlobalCom" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    <div class="clear10"></div>
                    <div class="row">
                        <div class="col-md-1 col-sm-1 col-lg-1 col-xs-12"></div>
                        <div class="col-md-10 col-sm-10 col-lg-10 col-xs-12">
                            <div id="dvConfirmationTxt">
                                <label id="SpnComponentName"></label>
                            </div>
                            <div class="clear20"></div>
                            <input type="submit" id="btnGCCancle" class="btn btn-primary BtnWhiteLg BtnWidth99" value="Cancel" />
                            <input type="submit" id="btnGCDelete" class="btn btn-primary BtnBlueLg BtnWidth99" value="Delete" />
                            <div class="clear20"></div>
                        </div>
                        <div class="col-md-1 col-sm-1 col-lg-1 col-xs-12"></div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
    </div>
</section>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@Scripts.Render("~/Scripts/commanscript")

<script type="text/javascript">
        //var ExportDeptURL = '@Url.RouteUrl("ExportDepartment")'
    var getComponentURL = '@Url.RouteUrl("getComponent")'
    var GetComponentHistoryURL = '@Url.RouteUrl("GetComponentHistory")'
    var getComponentFileTypeURL='@Url.RouteUrl("getComponentFileType")'
        @*var UploadDepartmentURL = '@Url.RouteUrl("UploadDepartment")'
        var DownLoadResultFileURL = '@Url.RouteUrl("ResultFileDepartment")'
        var DownLoadSampleDeptURL = '@Url.RouteUrl("DownLoadSampleDept")'
     var FilesUploadURL = '@Url.RouteUrl("FilesUpload")'*@
</script>
<script type="text/javascript">

        $(document).ready(function () {
            $("#li_Configuration").addClass("active");
            $("#anch_ViewGlobalComponent").addClass("CurantPageIcon");
           BindGrid();
           //$("#dvExport").bind("click", {}, function DownLoadAll() {
           //    var URL = ExportDeptURL;
           //    window.location = URL;
           //    return false;
           //});
           //$("#dvimport").bind("click", {}, OpenUploadPopup);
           $("#add").click(function () {
               $("#btnReset").click();
               $("#btnSubmit").val("Submit");
               $("#hdnCompnentID").val(0);
               $("#COMPONENT_FILE_TYPE").prop("disabled", false);
               OpenModal("dvAddUpdateComponent", 700, "Add Component");
           });

    });
        $("#COMPONENT_FILE_TYPE").change(function () {
            BindComponentType();
        });
        $("#COMPONENT_TYPE").change(function () {
            BindComponentSubtype();
            $("#GdivMinMax").hide();
            $("#dvTableName").hide();
            if (this.value != "MASTER") {
                $("#GdivMinMax").show();
            }
            if (this.value == "MASTER") {
                $("#dvTableName").show();
            }
        });
        $("#Component_TableName").change(function () {
            BindComponentFieldName();
        });
        //$("#COMPONENT_TYPE").change(function () {
        //    $("#GdivMinMax").hide();
        //    if (this.value != "MASTER") {
        //        $("#GdivMinMax").show();
        //    }
        //})

        function BindComponentFieldName() {
            var ddlComponent_TableName = $("#Component_TableName").val();
            var ddlFieldName = $("#Component_FieldName");
            ddlFieldName.empty().append($('<option></option>').val("0").html("Please wait..."));
            if (ddlComponent_TableName != "") {
                $.get('@Url.RouteUrl("getComponentTableName")', { TableName: ddlComponent_TableName }, function (response) {
                    if (response.IsSuccess) {
                        ddlFieldName.empty().append($('<option></option>').val("").html("-- Select --"));
                        var ds = $.parseJSON(response.Data);
                        if (ds.length > 0) {
                            $.each(ds, function () {
                                ddlFieldName.append($('<option></option>').val(this.FIELD_NAME).html(this.DISPLAY_NAME));
                            });
                        }
                    }
                });
            }
            else {
                ddlFieldName.html('').append($('<option></option>').val("0").html("-- First select Table Name --"));
            }
        }
        function BindComponentType() {
            var ddlCOMPONENT_SUB_TYPE = $("#COMPONENT_SUB_TYPE");
            var ddlCOMPONENT_FILE_TYPE = $("#COMPONENT_FILE_TYPE").val();
            var COMPONENT_TYPE = $("#COMPONENT_TYPE").val();
            var ddlCOMPONENT_TYPE = $("#COMPONENT_TYPE");
            ddlCOMPONENT_TYPE.empty().append($('<option></option>').val("0").html("Please wait..."));
            ddlCOMPONENT_SUB_TYPE.empty().append($('<option></option>').val("0").html("select a Component File Type first"));
            if (ddlCOMPONENT_FILE_TYPE != "") {
                $.get(getComponentFileTypeURL, { COMPONENT_FILE_TYPE: ddlCOMPONENT_FILE_TYPE, COMPONENT_TYPE: "" }, function (response) {
                    if (response.IsSuccess) {
                        ddlCOMPONENT_TYPE.empty().append($('<option></option>').val("").html("-- Select --"));
                        var ds = $.parseJSON(response.Data);
                        if (ds.length > 0) {
                            $.each(ds, function () {
                                ddlCOMPONENT_TYPE.append($('<option></option>').val(this.COMPONENT_TYPE).html(this.COMPONENT_TYPE));
                            });
                        }
                    }
                });
            }
            else {
                ddlCOMPONENT_TYPE.html('').append($('<option></option>').val("0").html("-- select a Component File Type first --"));
            }
        }
        function BindComponentSubtype() {
            var ddlCOMPONENT_FILE_TYPE = $("#COMPONENT_FILE_TYPE").val();
            var ddlCOMPONENT_TYPE = $("#COMPONENT_TYPE").val();
            var ddlCOMPONENT_SUB_TYPE = $("#COMPONENT_SUB_TYPE");
            ddlCOMPONENT_SUB_TYPE.empty().append($('<option></option>').val("0").html("Please wait..."));
            if (ddlCOMPONENT_FILE_TYPE != "" && ddlCOMPONENT_TYPE !="") {
                $.get(getComponentFileTypeURL, { COMPONENT_FILE_TYPE: ddlCOMPONENT_FILE_TYPE, COMPONENT_TYPE: ddlCOMPONENT_TYPE }, function (response) {
                    if (response.IsSuccess) {
                        ddlCOMPONENT_SUB_TYPE.empty().append($('<option></option>').val("").html("-- Select --"));
                        var ds = $.parseJSON(response.Data);
                        if (ds.length > 0) {
                            $.each(ds, function () {
                                ddlCOMPONENT_SUB_TYPE.append($('<option></option>').val(this.COMPONENT_SUB_TYPE).html(this.COMPONENT_SUB_TYPE));
                            });
                        }
                    }
                });
            }
            else {
                ddlCOMPONENT_SUB_TYPE.html('').append($('<option></option>').val("0").html("-- first select a Component Type first --"));
            }
        }
var Kgrid = "";
        function BindGrid() {
            var ComponentID = 0;
            $.get(getComponentURL, { ComponentID: ComponentID }, function (response) {
                if (Kgrid != "") {
                    $('#Kgrd').kendoGrid('destroy').empty();
                }
                var GridColumns = [
                    { field: "COMPONENT_FILE_TYPE", title: "File Type", width: 130 },
                    { field: "COMPONENT_TYPE", title: "Component Type", width: 130 },
                    { field: "COMPONENT_SUB_TYPE", title: "Component Sub Type", width: 150 },
                   // { field: "COMPONENT_DATATYPE", title: "Component Data Type", width: 130 },
                    { field: "COMPONENT_NAME", title: "Component Name", width: 150 },
                   // { field: "COMPONENT_DISPLAY_NAME", title: "Display Name", width: 150 },
                   // { field: "COMPONENT_DESCRIPTION", title: "Component Description", width: 130 },
                    { field: "MIN_LENGTH", title: "Min Length", width: 100 },
                    { field: "MAX_LENGTH", title: "Max Length", width: 100 },
                    { field: "MANDATORY_STATUS", title: "Mandatory", width: 120 },
                   // { field: "STATUS", title: "Status", width: 100, template: "<span class= #if(STATUS=='Active'){#'BtnApproved Setlabel'#}else{#'BtnGray Setlabel'# }#   >#:STATUS#</span>" },
                {
                    command:
                      [
                        { name: "Edit", text: "", iconClass: "kIcon  kIconEdit ", click: EditHandler, title: "Edit" },
                        { name: "Delete", text: "", iconClass: "kIcon kdelete ", click: DeleteHandler, title: "Delete" },
                          { name: "View", text: "", iconClass: "kIcon kIconView ", click: ViewHandler, title: "View" },
                      ], title: "Action", width: 140
                },

                ];
                //if (response.Command != null) {
                //    for (var i = 0; i < response.Command.command.length; i++) {
                //        if (response.Command.command[i].name == "Edit")
                //            response.Command.command[i].click = EditHandler;
                //        else if (response.Command.command[i].name == "View")
                //            response.Command.command[i].click = ViewHandler;
                //    }
                //    GridColumns.push(response.Command);
                //}
                Kgrid = $("#Kgrd").kendoGrid({
                    dataSource: {
                        pageSize: 15,
                        data: JSON.parse(response.Data)
                    },
                    pageable: { pageSizes: true },
                    height: 400,
                    filterable: true,
                    noRecords: true,
                    resizable: true,
                    //reorderable: true,
                    dataBound: ShowToolTip,
                    sortable: true,
                    columns: GridColumns,
                });

            });

        }



        function SuccessMessage(res) {
            if ($("#hdnCompnentID").val() > 0 && res.IsSuccess)
        $("#dvAddUpdateComponent").modal('hide');
    HandleSuccessMessage(res, "btnReset");
    BindGrid();
}
function FailMessage() {
    // alert("Fail Post");
}
function Validate() {
    return true;
}


var ViewHandler = function ViewHandler(e) {
    e.preventDefault();
    dataItem = this.dataItem($(e.currentTarget).closest("tr"));
    var ComponentID = dataItem.TID;
    $.get(getComponentURL, { ComponentID: ComponentID }, function (response) {

        var Data = $.parseJSON(response.Data);
        $("#lblComponentTablename").html(htmlEncode(Data[0].COMPONENT_TABLE_NAME));
        $("#lblComponentColumnName").html(htmlEncode(Data[0].COMPONENT_COLUMN_NAME));
        $("#lblComponentFileType").html(htmlEncode(Data[0].COMPONENT_FILE_TYPE));
        $("#lblComponentType").html(htmlEncode(Data[0].COMPONENT_TYPE));
        $("#lblComponentSubType").html(htmlEncode(Data[0].COMPONENT_SUB_TYPE));
        $("#lblComponentName").html(htmlEncode(Data[0].COMPONENT_NAME));
        $("#lblComponentDataType").html(Data[0].COMPONENT_DATATYPE);
        $("#lblCompDispName").html(htmlEncode(Data[0].COMPONENT_DISPLAY_NAME));
        $("#lblCompDesc").html(htmlEncode(Data[0].COMPONENT_DESCRIPTION));
        $("#lblMinLength").html(Data[0].MIN_LENGTH);
        $("#lblMaxLength").html(htmlEncode(Data[0].MAX_LENGTH));
        $("#lblMandatory").html(htmlEncode(Data[0].MANDATORY_STATUS));
        $("#lblIsActive").html(htmlEncode(Data[0].STATUS));
        HistoryGridData(ComponentID);
    });
}

    //=====================Delete===========================
    var GlobalCompID = '';
    var DeleteCOMPONENT_NAME = '';
    var DeleteHandler = function DeleteHandler(e) {
        e.preventDefault();
        dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        GlobalCompID = dataItem.TID;
        DeleteCOMPONENT_NAME = dataItem.COMPONENT_NAME;
            $("#SpnComponentName").html('Are you sure you want to delete Component ' + dataItem.COMPONENT_NAME + " ?");
            OpenModal("dvDeleteGlobalCom", 150, "Delete Confirmation");
    }

    $("#btnGCDelete").click(function () {
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $.post("@Url.RouteUrl("DeleteGlobalComponent")", { __RequestVerificationToken: token, GlobalCompID: GlobalCompID }, function (response) {

                if (!response.IsSuccess) {
                    response.Message = "First Delete Component " + DeleteCOMPONENT_NAME +" from File Component Details."
                    HandleSuccessMessage(response);
                    $('#dvDeleteGlobalCom').modal('toggle');
                }
                if (response.IsSuccess) {
                    HandleSuccessMessage(response);
                    $('#dvDeleteGlobalCom').modal('toggle');
                    BindGrid();
                }
            });
    })
    $("#btnGCCancle").click(function () {
        $('#dvDeleteGlobalCom').modal('toggle');
      })
    //====================End===============================

//function DownLoadAll() {

//    var URL = DownloadAllMapppingUserUrl
//    window.location = URL;
//    return false;
//}


    function HistoryGridData(ComponentID) {
    $.ajax({
        type: "GET",
        url: GetComponentHistoryURL,
        contentType: "application/json; charset=utf-8",
        data: { "ComponentID": ComponentID },
        dataType: "json",
        success: function (response) {
            HistorybindGrid(response.Data);
            OpenModal("tab", 910, "Component");
        },
        error: function (data) {
            alert("something went wrong");
        }
    });
}

var histkgrid = "";
function HistorybindGrid(Data1) {
    if (histkgrid != "") {
        $('#kgrdHistory').kendoGrid('destroy').empty();
    }
    histkgrid = $("#kgrdHistory").kendoGrid({
        dataSource: {
            pageSize: 10,
            data: JSON.parse(Data1)
        },
        columns: [
            { field: "COMPONENT_FILE_TYPE", title: "File Type", width: 130 },
            { field: "COMPONENT_TYPE", title: "Component Type", width: 130 },
            { field: "COMPONENT_SUB_TYPE", title: "Component Sub Type", width: 150 },
            { field: "COMPONENT_DATATYPE", title: "Component Data Type", width: 130 },
            { field: "COMPONENT_NAME", title: "Component Name", width: 150 },
            { field: "COMPONENT_DISPLAY_NAME", title: "Display Name", width: 150 },
            // { field: "COMPONENT_DESCRIPTION", title: "Component Description", width: 130 },
           // { field: "MIN_LENGTH", title: "Min Length", width: 130 },
           // { field: "MAX_LENGTH", title: "Max Length", width: 150 },
            { field: "MANDATORY_STATUS", title: "Mandatory", width: 150 },
                    { field: "STATUS", title: "Status", width: 100, template: "<span class= #if(STATUS=='Active'){#'BtnApproved Setlabel'#}else{#'BtnGray Setlabel'# }#   >#:STATUS#</span>" },
        ],
        dataBound: function (e) {
            var grid = e.sender;
            if (grid.dataSource.total() == 0) {
                var colCount = grid.columns.length;
                //$(e.sender.wrapper)
                //    .find('tbody')
                //    .append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data"><span style="margin-left:46%;">No data found.</span></td></tr>');
            }
            else {
                var rows = grid.dataSource.total();
                var colCount = grid.columns.length;
                for (var i = rows - 1; i > 0 ; i--) {
                    for (var k = 0; k < colCount; k++) {

                        if (grid.tbody[0].children[i].cells[k].innerText != grid.tbody[0].children[i - 1].cells[k].innerText) {
                            grid.tbody[0].children[i - 1].cells[k].bgColor = "red";
                        }
                    }
                }
            }
        },
        noRecords: true,
        filterable: true,
        sortable: true,
        pageable: true,
        reorderable: true,
        resizable: true,




    });
}


var EditHandler = function EditHandler(e) {
    $("#btnReset").click();
    e.preventDefault();
    dataItem = this.dataItem($(e.currentTarget).closest("tr"));
    var ComponentID = dataItem.TID;
    $.get(getComponentURL, { ComponentID: ComponentID }, function (response) {
        var Data = $.parseJSON(response.Data);
        $("#hdnCompnentID").val(ComponentID);
        $("#COMPONENT_NAME").val(htmlEncode(Data[0].COMPONENT_NAME));
        $("#COMPONENT_FILE_TYPE").val(htmlEncode(Data[0].COMPONENT_FILE_TYPE));
        $("#Component_TableName").val(htmlEncode(Data[0].COMPONENT_TABLE_NAME));
      //  $("#COMPONENT_FILE_TYPE").prop("disabled", true);
        //Re Bind COMPONENT_TYPE Drop Down=============================================
        var ddlCOMPONENT_FILE_TYPE = $("#COMPONENT_FILE_TYPE").val();
        var COMPONENT_TYPE = $("#COMPONENT_TYPE").val();
        var ddlCOMPONENT_TYPE = $("#COMPONENT_TYPE");
        ddlCOMPONENT_TYPE.empty().append($('<option></option>').val("0").html("Please wait..."));
        if (ddlCOMPONENT_FILE_TYPE != "") {
            $.get(getComponentFileTypeURL, { COMPONENT_FILE_TYPE: ddlCOMPONENT_FILE_TYPE, COMPONENT_TYPE: COMPONENT_TYPE }, function (response) {
                if (response.IsSuccess) {
                    ddlCOMPONENT_TYPE.empty().append($('<option></option>').val("").html("-- Select --"));
                    var ds = $.parseJSON(response.Data);
                    if (ds.length > 0) {
                        $.each(ds, function () {
                            ddlCOMPONENT_TYPE.append($('<option></option>').val(this.COMPONENT_TYPE).html(this.COMPONENT_TYPE));
                        });
                        $("#COMPONENT_TYPE").val(htmlEncode(Data[0].COMPONENT_TYPE));
                    }
                }
            });
        }
        else {
            ddlCOMPONENT_TYPE.html('').append($('<option></option>').val("0").html("-- select a Component File Type first --"));
        }
     //======================================================================
        $("#GdivMinMax").hide();
        $("#dvTableName").hide();
        var ComType = htmlEncode(Data[0].COMPONENT_TYPE);
        if (ComType != "MASTER") {
            $("#GdivMinMax").show();
        }
        if (ComType == "MASTER") {
            $("#dvTableName").show();
        }
        //Re Bind COMPONENT_TYPE Drop Down=============================================
        var ddlCOMPONENT_FILE_TYPE = $("#COMPONENT_FILE_TYPE").val();
        var ddlCOMPONENT_TYPEVal = $("#COMPONENT_TYPE").val();
        var ddlCOMPONENT_SUB_TYPE = $("#COMPONENT_SUB_TYPE");
        ddlCOMPONENT_SUB_TYPE.empty().append($('<option></option>').val("0").html("Please wait..."));
        if (ddlCOMPONENT_FILE_TYPE != "" && ddlCOMPONENT_TYPEVal != "") {
            $.get(getComponentFileTypeURL, { COMPONENT_FILE_TYPE: ddlCOMPONENT_FILE_TYPE, COMPONENT_TYPE: Data[0].COMPONENT_TYPE }, function (response) {
                if (response.IsSuccess) {
                    ddlCOMPONENT_SUB_TYPE.empty().append($('<option></option>').val("").html("-- Select --"));
                    var ds = $.parseJSON(response.Data);
                    if (ds.length > 0) {
                        $.each(ds, function () {
                            ddlCOMPONENT_SUB_TYPE.append($('<option></option>').val(this.COMPONENT_SUB_TYPE).html(this.COMPONENT_SUB_TYPE));
                        });
                        $("#COMPONENT_SUB_TYPE").val(htmlEncode(Data[0].COMPONENT_SUB_TYPE));
                    }
                }
            });
        }
        else {
            ddlCOMPONENT_SUB_TYPE.html('').append($('<option></option>').val("0").html("-- first select a Component Type first --"));
        }
        //======================================================================
        //FieldName===============================================
          var ddlComponent_TableName = $("#Component_TableName").val();
            var ddlFieldName = $("#Component_FieldName");
            ddlFieldName.empty().append($('<option></option>').val("0").html("Please wait..."));
            if (ddlComponent_TableName != "") {
                $.get('@Url.RouteUrl("getComponentTableName")', { TableName: ddlComponent_TableName }, function (response) {
                    if (response.IsSuccess) {
                        ddlFieldName.empty().append($('<option></option>').val("").html("-- Select --"));
                        var ds = $.parseJSON(response.Data);
                        if (ds.length > 0) {
                            $.each(ds, function () {
                                ddlFieldName.append($('<option></option>').val(this.FIELD_NAME).html(this.DISPLAY_NAME));
                            });
                            $("#Component_FieldName").val(htmlEncode(Data[0].COMPONENT_COLUMN_NAME))
                        }
                    }
                });
            }
            else {
                ddlFieldName.html('').append($('<option></option>').val("0").html("-- First select Table Name --"));
            }
        //==============================================
        $("#COMPONENT_DATATYPE").val(htmlEncode(Data[0].COMPONENT_DATATYPE));
       
        $("#COMPONENT_DISPLAY_NAME").val(htmlEncode(Data[0].COMPONENT_DISPLAY_NAME));
        $("#COMPONENT_DESCRIPTION").val(htmlEncode(Data[0].COMPONENT_DESCRIPTION));
        $("#MIN_LENGTH").val(htmlEncode(Data[0].MIN_LENGTH));
        $("#MAX_LENGTH").val(htmlEncode(Data[0].MAX_LENGTH));
        var IsAct = Data[0].ISACTIVE;
        (IsAct == 1) ? $('#IsActive').prop('checked', true) : $('#IsActive').prop('checked', false);
        var IsMandatory = Data[0].MANDATORY;
        (IsMandatory == 1) ? $('#MANDATORY').prop('checked', true) : $('#MANDATORY').prop('checked', false);
        $("#btnSubmit").val("Update");
        OpenModal("dvAddUpdateComponent", 700, "Edit Component");

    });
}


var form = $('#__AjaxAntiForgeryForm');
var token = $('input[name="__RequestVerificationToken"]', form).val();
$("#files").kendoUpload({
    async: {
        //saveUrl: FilesUploadURL,
        removeUrl: "remove",
        autoUpload: true
    },
    upload: function (e) {
        e.data = { __RequestVerificationToken: token, Folder: "Temp" };
    },
    select: function (event) {
        var notAllowed = false;
        $.each(event.files, function (index, value) {
            if (value.extension !== '.csv') {
                alert("Plese select a csv file only!");
                notAllowed = true;
            }
        });
        var breakPoint = 0;
        if (notAllowed == true) e.preventDefault();
    },
    multiple: false,
    success: onSuccessForUpload,
    remove: onRemoveForUpload,
    showFileList: false
});
$("#btnUpload").click(function (event) {
    var fileName = $("#hdnFileName").val();
    if (fileName.trim() == "") {
        alert("Please select a CSV file");
        return false;
    }
    var form = $('#__AjaxAntiForgeryForm');
    var token = $('input[name="__RequestVerificationToken"]', form).val();

    var Data = { __RequestVerificationToken: token, FileName: fileName };
    @*url: '@Url.RouteUrl("UploadVendor")',*@
    //Url.RouteUrl(new { controller = "Vendor", action = "UploadVendor" })
    $.ajax({
        type: "POST",
        url: UploadDepartmentURL,
        contentType: "application/x-www-form-urlencoded",

        data: {
            __RequestVerificationToken: token,
            FileName: fileName
        },
        dataType: "json",
        success: function (response) {
            if (response.IsSuccess == false) {
                alert(response.Message);
            }
            else {
                var Data = JSON.parse(response.Data);
                $("#lblTotSuccess").html(Data["Success"]);
                $("#lblTotFailed").html(Data["Failed"]);
                $("#hdnresultFile").val(Data["FileName"]);
                $("#dvUploadVendor").dialog("close");
                BindGrid();
                $("#Uploaddialog").modal('hide');
                OpenModal("log", 500, "Upload Component");
            }

        }

    });
});
function DownLoadResultFile() {
    var FileName = $("#hdnresultFile").val();
    var Data = { FileName: FileName };
    var URL = DownLoadResultFileURL + '?FileName=' + FileName;
    window.location = URL;
    return false;
}
    function DownLoadSampleCostCentre() {
        var URL = DownLoadSampleDeptURL;
    window.location = URL;
    return false;
}
function OpenUploadPopup() {
    OpenModal("Uploaddialog", 500, "Upload Component");
}

</script>



