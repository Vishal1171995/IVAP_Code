@model Ivap.Areas.Configuration.Models.DataAccessControlModel
@using Ivap.Repository;
@{
    ViewBag.Title = "DataAccessControl";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .k-dropdown {
        width: 330px !important;
    }

    .btn {
        border: none;
        outline: none;
        padding: 10px 16px;
        background-color: #f1f1f1;
        cursor: pointer;
    }

    /* Style the active class (and buttons on mouse-over) */
    .active1 {
        background-color: #015b9f;
        color: white;
    }
</style>

<style>
    /*  bhoechie tab */
    div.bhoechie-tab-container {
        z-index: 10;
        background-color: #ffffff;
        padding: 0 !important;
        border-radius: 4px;
        -moz-border-radius: 4px;
        border: 1px solid #ddd;
        -webkit-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        box-shadow: 0 6px 12px rgba(0,0,0,.175);
        -moz-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        background-clip: padding-box;
        opacity: 0.97;
        filter: alpha(opacity=97);
    }

    div.bhoechie-tab-menu {
        padding-right: 10px;
        padding-left: 0;
        padding-bottom: 0;
    }

        div.bhoechie-tab-menu div.list-group {
            margin-bottom: 0;
        }

            div.bhoechie-tab-menu div.list-group > a {
                margin-bottom: 0;
            }

                div.bhoechie-tab-menu div.list-group > a .glyphicon,
                div.bhoechie-tab-menu div.list-group > a .fa {
                    color: #015b9f;
                }

                div.bhoechie-tab-menu div.list-group > a:first-child {
                    border-top-right-radius: 0;
                    -moz-border-top-right-radius: 0;
                }

                div.bhoechie-tab-menu div.list-group > a:last-child {
                    border-bottom-right-radius: 0;
                    -moz-border-bottom-right-radius: 0;
                }

                div.bhoechie-tab-menu div.list-group > a.active,
                div.bhoechie-tab-menu div.list-group > a.active .glyphicon,
                div.bhoechie-tab-menu div.list-group > a.active .fa {
                    background-color: #015b9f;
                    background-image: #015b9f;
                    color: #ffffff;
                }

                    div.bhoechie-tab-menu div.list-group > a.active:after {
                        content: '';
                        position: absolute;
                        left: 100%;
                        top: 50%;
                        margin-top: -13px;
                        border-left: 0;
                        border-bottom: 13px solid transparent;
                        border-top: 13px solid transparent;
                        border-left: 10px solid #015b9f;
                    }

    div.bhoechie-tab-content {
        background-color: #ffffff;
        /* border: 1px solid #eeeeee; */
        /*padding-left: 20px;
        padding-top: 10px;*/
    }

    /*div.bhoechie-tab div.bhoechie-tab-content:not(.active) {
        display: none;
    }*/
</style>
<div class="panel panel-default">
    <div class="panel-heading">	<h2>Data Access Control</h2> </div>
    <div class="panel-body">
        <div class="form-group row">
            <div class="clear20"></div>
            <div class="col-md-7 col-md-offset-2">
                <label class="col-sm-2 col-form-label mg-top7">User Id : </label>
                <div class="col-sm-7">
                    @{
                        string sel = Convert.ToString(ViewBag.SelectedValue);
                    }

                    @Html.DropDownListFor(m => m.UserID, new SelectList(Model.UserList, "Value", "Text", 0), new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserID)
                </div>
                <div class="col-md-3">
                    @if (AuthorizationRepo.IsValidAction("DataAccessControl", "CreateAction"))
                    {
                        @*<button id="btnCopyToAnotherUser" type="button" class="btn btn-primary BtnBlueLg">Copy To Another User</button>*@
                        <button id="btnCopyToAnotherUser" type="button" class="btn btn-primary btn-new">Copy To Another User</button>
                    }

                </div>
            </div>
        </div>
    </div>
    <div class="panel-body" style="padding-top:0px;padding-bottom:10px;">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 bhoechie-tab-container">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 bhoechie-tab-menu verticalscroll">
                    <div class="list-group">
                        <a href="#" class="list-group-item text-center active MenuTable" attr-table="FileSetupList">
                            <i class="fa fa-cog"></i> <br />File Setup
                        </a>
                            @foreach (var menu in ViewBag.MenuData)
                            {
                                <a href="#" class="list-group-item text-center MenuTable" attr-table="@menu["ROUTE"]">
                                        <i class="fa fa-cog"></i> <br />@menu["NAME"]
                                    </a>
                            }
                    </div>
                </div>

                <div class="col-lg-9 col-md-9 col-sm-9 col-xs-9 bhoechie-tab">
                    <!-- flight section -->
                    <div class="bhoechie-tab-content active">
                        <center>
                            <input type="hidden" id="TableName" />
                            <input type="hidden" id="TableID" />
                            <div id="Kgrid"></div>
                        </center>
                    </div>
                    <div class="clear10"></div>
                    <div class="col-12" style="text-align:right;">
                        @if (AuthorizationRepo.IsValidAction("DataAccessControl", "CreateAction"))
                        {
                            <input type="button" id="btnSubmit" value="Submit" class="btn btn-primary BtnBlueLg" />
                        }
                    </div>
                    <!-- train section onclick="SubmitAccessControl()"-->
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade PopUpMainDiv" id="myModal" role="dialog">
    <div class="modal-dialog" style="width:500px;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/Content/images/popup_close.png" alt="Close " />
                </button>
                <h4 class="modal-title">Copy To Another User</h4>
            </div>
            <div class="modal-body">
                <div class="row form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">User<span class="text-red">*</span></label>
                    <div class="col-sm-8">
                        <select id="UserCopyRightList" class="form-control">
                            <option value="0">All</option>
                        </select>
                        <input type="hidden" value="" id="hf_skill" />
                    </div>
                </div>

                @*<label>User</label>
        <select id="UserCopyRightList" class="form-control">
            <option value="0">All</option>
        </select>
        <input type="hidden" value="" id="hf_skill" onclick="CopyRightSubmit()"/>*@
            </div>
            <div class="clear10"></div>
            <div class="col-md-12">
                <button type="button" class="btn btn-primary BtnBlueLg"  id="btnCopyRight" >Submit</button>
                <button type="button" class="btn btn-primary BtnWhiteLg" data-dismiss="modal">Close</button>
            </div>
            <div class="clear20"></div>
        </div>
    </div>
</div>
<div class="modal fade PopUpMainDiv popupindex" id="dvError" role="dialog">
    <div class="modal-dialog " style="width:30%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/Content/images/popup_close.png" alt="Close " />
                </button>
                <h4 class="modal-title" id="ModalHeading"></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="block-trip mg-0">
                            <span id="spnError"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()

}
@section scripts{
    @Scripts.Render("~/Scripts/commanscript")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.dropdown-menu li a').click(function (event) {
                var option = $(event.target).text();
                $(event.target).parents('.btn-group').find('.dropdown-toggle').html(option + ' <span class="caret caretBlue"></span>');
            });
        });
        $(document).ready(function () {
            $("#flip").click(function () {
                $("#panel").slideToggle("slow");
            });
        });
    </script>
    <script>
        $(window).load(function () {
            $(".TextBoxMainMain input").val("");
            $(".TextBoxMainMain input").focusout(function () {
                if ($(this).val() != "") {
                    $(this).addClass("has-content");
                } else {
                    $(this).removeClass("has-content");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("div.bhoechie-tab-menu>div.list-group>a").click(function (e) {
                e.preventDefault();
                $(this).siblings('a.active').removeClass("active");
                $(this).addClass("active");
                var index = $(this).index();
                $("div.bhoechie-tab>div.bhoechie-tab-content").removeClass("active");
                $("div.bhoechie-tab>div.bhoechie-tab-content").eq(index).addClass("active");
            });
        });
    </script>


    <script type="text/javascript">
        var GetAccessControlURL = "@Url.RouteUrl("GetAccessControl")"
        var AddUpdateDataAccessURL = "@Url.RouteUrl("AddUpdateDataAccess")"
        var CopyRightUserURL = "@Url.RouteUrl("CopyRightUser")"
        var CopyRightSubmitURL = "@Url.RouteUrl("CopyRightSubmit")"
        $(document).ready(function () {
            $("#li_Configuration").addClass("active");
            $("#anch_DataAccessControl").addClass("CurantPageIcon");
            var ActionName = "";
            $("#UserID").val(@ViewBag.SelectedValue);
            //var selMaster = '@ViewBag.SelMaster'
            var selMaster = 'FileSetupList';
            ActionName = selMaster;
            if (selMaster != "") {
                BindGrid(selMaster,@ViewBag.SelectedValue);
            }
            $(".MenuTable").click(function () {
                $(".MenuTable").removeClass('active');
                $(this).addClass('active');
                $("#btnSubmit").val("SUBMIT");
                $("#TableID").val("");
                ActionName = $(this).attr("attr-table");
                var UID = $("#UserID").val();

                if (UID == 0) {
                    $("#ModalHeading").html("Error");
                    $("#spnError").html("Please select the User");
                    $("#dvError").modal("show");
                    return false;
                }
                BindGrid(ActionName, UID);
            });
            $("#UserID").change(function () {
                var UID = this.value;
                if (ActionName !="")
                    BindGrid(ActionName, UID);
            });
        });
        var Kgrid = "";
        function BindGrid(ActionName, UID) {
            $("#btnSubmit").show();
            $.get(GetAccessControlURL, {  "ActionName": ActionName,"UID": UID }, function (response) {
                if (Kgrid != "") {
                    $('#Kgrid').kendoGrid('destroy').empty();
                }
                var GridColumns = [
                    { selectable: true, width: 10 },
                    { field: "Name", title: "Name", width: 60 },
                    { field: "PAY_CODE", title: "Pay Code", width: 60 },
                    { field: "ERP_CODE", title: "Erp Code", width: 60 },

                ];

                Kgrid = $("#Kgrid").kendoGrid({
                    dataSource: {
                        //pageSize: 15,
                        data: JSON.parse(response.Data),
                        schema: {
                            model: {
                                id: "TID"

                            }
                        }
                    },
                    //pageable: { pageSizes: true },
                    height: 410,
                    filterable: true,
                    noRecords: true,
                    resizable: true,
                    persistSelection: true,
                    //reorderable: true,
                    sortable: true,
                    change: onChange,
                    columns: GridColumns,
                    dataBound: function (e) {
                        var grid = $("#Kgrid").data("kendoGrid");
                        var gridData = grid.dataSource.view();
                        for (var i = 0; i < gridData.length; i++) {
                            var currentUid = gridData[i].uid;
                            if (gridData[i].Checked == "Y") {
                                var currentRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                                //var grid1 = e.sender;
                                grid.select(currentRow);
                            }
                        }

                    }
                });

            });
        }
        function onChange(e) {
            $("#TableID").val(this.selectedKeyNames().join(", "));
            var grid = $("#Kgrid").data("kendoGrid");
            var gridData = grid.dataSource.view();
            var columnheader = gridData[0].TableName;
            $("#TableName").val(columnheader);

        }
        $("#btnCopyToAnotherUser").click(function () {
            var UID = $("#UserID").val();
            if (UID == 0 || UID == null) {
                $("#spnError").html("Please select the User");
                $("#dvError").modal("show");
                return false;
            }
            $.ajax({
                url: CopyRightUserURL,
                method: "GET",
                data: { "UID": UID },
                success: function (response) {
                    var data1 = JSON.parse(response.Data)
                    console.log(data1);
                    $("#hf_skill").val("");
                    SkillCount = 0;
                    bindddlMultiSkill(data1);
                    $("#myModal").modal("show");
                }
            });
        });
        var UserCopy = "";
        function bindddlMultiSkill(data) {
           UserCopy= $("#UserCopyRightList").kendoDropDownList({
                name: "skill",
                dataTextField: "USERID",
                dataValueField: "UID",
                dataSource: data,
                //widht: "330px",
                filter: "contains",
                template: "<input type='checkbox' id='chk_skill_#=data.UID #' class='clsSkillInner' value='#=data.UID #' name='skill' />" + " " + " ${ data.USERID }",
                close: onClose,
                dataBound: onSkillBound
            }).data("kendoDropDownList");
        }
        var SkillCount = 0;
        function onSkillBound(e) {
            var msg = SkillCount > 0 ? SkillCount + ' User Selected' : 'Select User';
            e.sender.text(msg);
            $(".clsSkillInner").on("click", function (e) {
                var obj = this;
                var id = $(obj).attr('id');
                var name = $(obj).attr('name');
                var value = $(obj).attr('value');
                var IsChecked = $(obj).is(':checked');
                var hf = $("#hf_" + name).get(0);

                if (value != 0) {
                    UpdateIdInHiddenField(hf, value, IsChecked);

                    var totalchk = $('input[id*="chk_' + name + '"]').not("#chk_" + name + "_0").length;
                    var checkedchk = $('input[id*="chk_' + name + '"]:checked').not("#chk_" + name + "_0").length;

                    if (totalchk == checkedchk) {
                        $("#chk_" + name + "_0").prop("checked", true);
                    }
                    else {
                        $("#chk_" + name + "_0").prop("checked", false);
                    }
                    SkillCount = $("#hf_skill").val().split(',').length - 2;
                }
                else {
                    $.each(SkillData, function (index, data) {
                        if (data.SkillId != '0') {
                            if (IsChecked == true) {
                                $('input[id*="chk_skill_' + data.SkillId + '"]').prop("checked", true);
                                UpdateIdInHiddenField(hf, data.SkillId, IsChecked);
                            }
                            else {
                                $('input[id*="chk_skill_' + data.SkillId + '"]').prop("checked", false);
                                UpdateIdInHiddenField(hf, data.SkillId, IsChecked);
                            }
                        }

                    })
                    SkillCount = IsChecked ? SkillData.length - 1 : 0;
                }
                IsItemChecked = true;
            });
            bindSkillChk();
        }
        function bindSkillChk() {
            var chkInner = $("#hf_skill").val().split(',');
            chkInner = chkInner.filter(a => a != '');
            $.each(chkInner, function (index, data) {
                $('input[id*="chk_skill_' + data + '"]').prop("checked", true);
            })
        }
        function onClose(e) {
            var msg = SkillCount > 0 ? SkillCount + ' User Selected' : 'Select User';
            e.sender.text(msg);
            if (IsItemChecked == true) {
                IsItemChecked = false;
                e.preventDefault();
            }
            else {
                ShowSelectedItem();

            }
        }
        function ShowSelectedItem() {
            //$scope.SkillList = $("#hf_skill").val();
            //$scope.$apply();
        }
        var IsItemChecked = false;
        function UpdateIdInHiddenField(hf, id, IsAdd) {
            if (hf.value == "") {
                hf.value = ",";
            }
            if (IsAdd == true) {
                if (hf.value.indexOf("," + id + ",") == -1) {
                    hf.value = hf.value + id + ",";
                }
            }
            else if (IsAdd == false) {
                if (hf.value.indexOf("," + id + ",") >= 0) {
                    hf.value = hf.value.replace("," + id + ",", ",");
                }
            }
        }
        //function SubmitAccessControl() {
        $("#btnSubmit").click(function () {

            var UID = $("#UserID").val();
            if (UID == 0 || UID == null) {
                $("#dvError").modal("show");
                $("#spnError").html("Please select the User");
                return false;
            }
            var access = $("#TableID").val();
            var ActionName = $('#TableName').attr("value");
            if (ActionName == undefined || ActionName == null) {
                $("#dvError").modal("show");
                $("#ModalHeading").html("Error");
                $("#spnError").html("Please select the Master");
                return false;
            }
            if (access == '' || access ==null)
            {
                $("#dvError").modal("show");
                $("#ModalHeading").html("Error");
                $("#spnError").html("Please select the checkbox");
                return false;
            }
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $.post(AddUpdateDataAccessURL, { __RequestVerificationToken: token, AccessCheck: access, ActionName: ActionName, UID: UID }, function (response) {
                if (response.IsSuccess) {
                    $("#dvError").modal("show");
                    $("#ModalHeading").html("Result");
                    $("#spnError").html("Successfully Submitted");
                }
                $("#dvError").modal("show");
                $("#ModalHeading").html("Result");
                $("#spnError").html("Successfully updated");
            });
        });

        //function CopyRightSubmit() {
        $("#btnCopyRight").click(function () {

            var COPYID = $("#UserID").val();
            //var UID = jQuery("#UserCopyRightList option:selected").val(); hf_skill
            var UID = $("#hf_skill").val();
            if (COPYID == 0 || UID == 0)
            {
                $("#dvError").modal("show");
                $("#ModalHeading").html("Error");
                $("#spnError").html("Please select the User");
                return false;
            }
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $.post(CopyRightSubmitURL, { __RequestVerificationToken: token, COPYID: COPYID, UID: UID }, function (response) {
                console.log(response);
                $("#myModal").modal("hide");
                $("#dvError").modal("show");
                $("#ModalHeading").html("Success");
                $("#spnError").html("Copied Successfully");
            });
        });
    </script>
}
