@model Ivap.Areas.Master.Models.BankModel
@{
    ViewBag.Title = "Bank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-default">
    <div class="pull-right VendorSiteBtnRightMain">
        @{Html.RenderAction("RenderMasterButton", "Authorization", new { RouteName = "ViewBank", area = string.Empty });}
    </div>
    <div class="panel-heading"><h3><strong>@Model.Screen_Name</strong></h3></div>
    <div class="panel-body">

        <div class="clear20"></div>
        <div class="TableOuterDiv table-responsive">
            <div id="Kgrd"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
@*</div>*@
<section class="content">
    <div id="tab" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">@Model.Screen_Name</h4>
                </div>
                <div class="modal-body">
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab_1" data-toggle="tab" aria-expanded="true">Detail</a></li>
                            <li class=""><a href="#tab_2" data-toggle="tab" aria-expanded="false">History</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab_1">
                                <table id="example2" class="table table-bordered table-hover">
                                    <tbody>
                                        <tr>
                                            <td> <label>Entity Name</label> </td>
                                            <td><span id="lblEntityName"> </span></td>
                                            <td> <label>@Model.BANK_NAME_TEXT</label> </td>
                                            <td><span id="lblBANKName"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>@Model.IFSC_Code_TEXT</label> </td>
                                            <td><span id="lblIFSC_Code"> </span></td>
                                            <td> <label>@Model.ERP_BANK_CODE_TEXT</label> </td>
                                            <td><span id="lblERP_BANK_CODE"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>@Model.PAY_BANK_CODE_TEXT</label> </td>
                                            <td><span id="lblPAY_BANK_CODE"> </span></td>
                                            <td> <label>@Model.BANK_ADDR_TEXT</label> </td>
                                            <td><span id="lblBANK_ADDR"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>@Model.BANK_CITY_TEXT</label> </td>
                                            <td><span id="lblBANK_CITY"> </span></td>
                                            <td> <label>@Model.BANK_STATE_TEXT</label> </td>
                                            <td><span id="lblSTATE_NAME"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>@Model.BANK_PIN_TEXT</label> </td>
                                            <td><span id="lblBANK_PIN"> </span></td>
                                            <td> <label>@Model.BANK_PHONE_TEXT</label> </td>
                                            <td><span id="lblBANK_PHONE"> </span></td>
                                        </tr>
                                        <tr>
                                            <td> <label>@Model.ISACTIVE_TEXT</label> </td>
                                            <td><span id="lblStatus"></span></td>
                                        </tr>
                                    </tbody>
                                </table>

                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_2">
                                <div id="kgrdHistory"></div>
                            </div>
                            <!-- /.tab-pane -->
                            <!-- /.tab-pane -->
                        </div>
                        <!-- /.tab-content -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="dvAddUpdateBank" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">@Model.Screen_Name Master</h4>
                </div>
                @using (Ajax.BeginForm("AddUpdateBank", new AjaxOptions { OnSuccess = "SuccessMessage", OnFailure = "FailMessage", OnBegin = "Validate" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body horizontalscroll">
                        <div class="row form-group">
                            <label for="BANK_NAME" class="col-sm-2 control-label">@Model.BANK_NAME_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.HiddenFor(m => m.BANKID, new { id = "hdnBankID" })
                                @Html.DropDownListFor(m => m.BANK_NAME, new SelectList(Model.BankNameList, "Value", "Text", "0"), new { @class = "form-control", @placeholder = "Bank Name" })
                                @Html.ValidationMessageFor(m => m.BANK_NAME)
                            </div>
                            <label for="inputEmail3" class="col-sm-2 control-label">@Model.IFSC_Code_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.IFSC_Code, new { @class = "form-control", @placeholder = "IFSC Code" })
                                @Html.ValidationMessageFor(m => m.IFSC_Code)
                            </div>

                        </div>
                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">@Model.ERP_BANK_CODE_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.ERP_BANK_CODE, new { @class = "form-control", @placeholder = "ERP Bank Code" })
                                @Html.ValidationMessageFor(m => m.ERP_BANK_CODE)
                            </div>
                            <label for="PAY_D_CODE" class="col-sm-2 control-label">@Model.PAY_BANK_CODE_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.PAY_BANK_CODE, new { @class = "form-control", @placeholder = "Pay Bank Code" })
                                @Html.ValidationMessageFor(m => m.PAY_BANK_CODE)
                            </div>
                        </div>
                        <div class="row form-group">
                            <label for="PAY_DEPT_CODE" class="col-sm-2 control-label">@Model.BANK_ADDR_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.BANK_ADDR, new { @class = "form-control", @placeholder = "Bank Address" })
                                @Html.ValidationMessageFor(m => m.BANK_ADDR)
                            </div>

                            <label for="inputPassword3" class="col-sm-2 control-label">@Model.BANK_CITY_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.BANK_CITY, new { @class = "form-control", @placeholder = "Bank City" })
                                @Html.ValidationMessageFor(m => m.BANK_CITY)
                            </div>
                        </div>
                        @*<div class="row form-group">
                    <label for="BANK_CODE" class="col-sm-2 control-label">@Model.BANK_CODE_TEXT<span class="text-red">*</span></label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.BANK_CODE, new { @class = "form-control", @placeholder = "Bank Code" })
                        @Html.ValidationMessageFor(m => m.BANK_CODE)
                    </div>
                </div>*@

                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">@Model.BANK_STATE_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(m => m.BANK_STATE, new SelectList(Model.BankStateList, "Value", "Text", "0"), new { @class = "form-control", @placeholder = "Bank State" })
                                @Html.ValidationMessageFor(m => m.BANK_STATE, "", new { @class = "" })
                            </div>
                            <label for="BANK_PIN" class="col-sm-2 control-label">@Model.BANK_PIN_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.BANK_PIN, new { @class = "form-control", @placeholder = "Bank PIN" })
                                @Html.ValidationMessageFor(m => m.BANK_PIN)
                            </div>
                        </div>


                        <div class="row form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">@Model.BANK_PHONE_TEXT<span class="text-red">*</span></label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(m => m.BANK_PHONE, new { @class = "form-control", @placeholder = "Phone No" })
                                @Html.ValidationMessageFor(m => m.BANK_PHONE)
                            </div>
                            <label for="IsActive" class="col-sm-2 control-label">@Model.ISACTIVE_TEXT</label>
                            <div class="col-sm-4">
                                @Html.CheckBoxFor(m => m.IsActive)
                            </div>
                        </div>
                    </div>
                    <div class="clear10"></div>
                    <div class="col-md-12">
                        <input type="reset" id="btnReset" value="Reset" class="btn btn-primary BtnWhiteLg BtnWidth150" />
                        <input type="submit" id="btnSubmit" class="btn btn-primary BtnBlueLg BtnWidth150" value="Submit" />
                    </div>
                    <div class="clear20"></div>
                }
            </div>
        </div>
    </div>


    <div id="Uploaddialog" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">Upload @Model.Screen_Name</h4>
                </div>
                <div class="modal-body">
                    <div class="clearfix"></div>
                    <div class="row top_content">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="col-xs-12 col-sm-4 col-md-4">
                                <label>select a XLSX file</label>
                            </div>
                            <div class="col-xs-12 col-sm-8 col-md-8 allcreditionals">
                                <input type="file" name="files" id="files" target-control="hdnFileName">
                                <input type="hidden" id="hdnFileName" />
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12 allcreditionals">
                                <div class="reset_btn" align="right">
                                    <input type="button" value="Sample" id="btnDownloadSample" class="btn btn-primary BtnBlueLg" onclick="DownLoadSample();" />
                                    <input type="button" value="Upload" id="btnUpload" class="btn btn-primary BtnBlueLg" />
                                </div>

                            </div>
                            @*</div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="log" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">@Model.Screen_Name Log</h4>
                </div>
                <div class="modal-body">
                    <div class="clearfix"></div>
                    <div class="row top_content">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="col-xs-12 col-sm-3 col-md-3 top_content">
                                <label class="headtag">Total Success</label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <label id="lblTotSuccess" class="feedback_content">500</label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <label class="headtag">Total Loss</label>
                            </div>
                            <div class="col-xs-12 col-sm-3 col-md-3">
                                <label id="lblTotFailed" class="feedback_content">500</label>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="reset_btn" align="right">
                                    <input type="hidden" id="hdnresultFile" />
                                    <input type="button" value="Download" onclick="DownLoadResultFile();" class="btn btn-primary BtnBlueLg" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
    {
        @Html.AntiForgeryToken()
    }

    @Scripts.Render("~/Scripts/commanscript")

    <script type="text/javascript">
        //var ExportDeptURL = '@Url.RouteUrl("ExportDepartment")'
        var getBankURL = '@Url.RouteUrl("getBank")'
        var getBankHistoryURL = '@Url.RouteUrl("GetBankHistory")'

         var DownLoadSampleURL = '@Url.RouteUrl("DownLoadSampleForExcel")'
        var FilesUploadURL = "@Url.RouteUrl("ExcelFilesUpload")"
        var UploadBankDetailsURL = "@Url.RouteUrl("UploadBankDetails")"
        var DownLoadResultFileURL = '@Url.RouteUrl("DownLoadResultFileForExcel")'
        var DownLoadAllBankURL= '@Url.RouteUrl("DownLoadAllBank")'
        @*var UploadDepartmentURL = '@Url.RouteUrl("UploadDepartment")'
        var DownLoadResultFileURL = '@Url.RouteUrl("ResultFileDepartment")'
        var DownLoadSampleDeptURL = '@Url.RouteUrl("DownLoadSampleDept")'
     var FilesUploadURL = '@Url.RouteUrl("FilesUpload")'*@
    </script>
    <script type="text/javascript">

        $(document).ready(function () {
            $("#li_Master").addClass("active");
            $("#anch_ViewBank").addClass("CurantPageIcon");
           BindGrid();
           $("#dvExport").bind("click", {}, function DownLoadAll() {
               var URL = DownLoadAllBankURL;
               window.location = URL;
               return false;
           });
           //$("#dvimport").bind("click", {}, OpenUploadPopup);
           $("#add").click(function () {
               $("#btnReset").click();
               $("#btnSubmit").val("Submit");
               $("#hdnBankID").val(0);
               OpenModal("dvAddUpdateBank", 700, "Add Department");
           });

           $("#txtIFSCCode1").autocomplete({
                source: function (request, response) {
                    var BankID = $("#BANK_NAME").val();
                    alert(BankID);
                    if (BankID == "0") {
                        alert("Please select Bank.");
                        return;
                    }
                    $.ajax({
                        url: "@Url.RouteUrl("GetIFSCCode")",
                        dataType: "json",
                        data: {
                            BankID: BankID,
                            searchStr: request.term
                        },
                        success: function (data) {
                            //alert(data);
                            response(JSON.parse(data.Data));
                        },
                        error: function (data, type) {
                            //alert(type);
                            //console.log(type);
                        }
                    });
                },
                minLength: 3,
                select: function (event, ui) {
                    alert(ui.item.id);
                    $("#IFSC_Code").val(ui.item.id);
                    //log("Selected: " + ui.item.value + " aka " + ui.item.id);
                },
                open: function () {
                    setTimeout(function () {
                        $('.ui-autocomplete').css('z-index', 99999999999999);
                    }, 0);
                }
            });
        });
        $("#BANK_NAME").change(function () {
            BindIFSCCode();
        })

        function BindIFSCCode() {
            var BankName = $("#BANK_NAME").val();
            var txtIFSCCode = $("#IFSC_Code");
           // txtIFSCCode.empty().append($('<option></option>').val("0").html("Please wait..."));
            if (BankName != "") {
                $.get("@Url.RouteUrl("GetIFSCCode")", { BANKNAME: BankName }, function (response) {
                    if (response.IsSuccess) {
                        //txtIFSCCode.empty().append($('<option></option>').val("").html("-- Select --"));
                        var ds = $.parseJSON(response.Data);
                        if (ds.length > 0) {
                            $.each(ds, function () {
                                //txtIFSCCode.append($('<option></option>').val(this.IFSC).html(this.IFSC));
                                txtIFSCCode.val(this.IFSC);
                            });
                        }
                    }
                });
            }
            else {
            }
        }




        //Uploader Code
        $("#dvimport").bind("click", {}, function () {
            OpenModal("Uploaddialog", 500, "Upload Plant");
        });
        var form = $('#__AjaxAntiForgeryForm');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        $("#files").kendoUpload({
            async: {
                saveUrl: FilesUploadURL,
                //removeUrl: "remove",
                autoUpload: true
            },
            upload: function (e) {
                e.data = { __RequestVerificationToken: token, Folder: "Temp" };
            },
            select: function (event) {
                var notAllowed = false;
                $.each(event.files, function (index, value) {
                    if (value.extension !== '.xlsx') {
                        alert("Plese select a xlsx file only!");
                        notAllowed = true;
                    }
                });
                var breakPoint = 0;
                if (notAllowed == true) e.preventDefault();
            },
            multiple: false,
            success: onSuccessForUpload,
            remove: onRemoveForUpload,
            showFileList: false
        });
        $("#btnUpload").click(function (event) {
            var fileName = $("#hdnFileName").val();
            if (fileName.trim() == "") {
                alert("Please select a xlsx file");
                return false;
            }
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            var Data = { __RequestVerificationToken: token, FileName: fileName };
            $.ajax({
                type: "POST",
                url: UploadBankDetailsURL,
                contentType: "application/x-www-form-urlencoded",
                //data: Data,
                data: {
                    __RequestVerificationToken: token,
                    FileName: fileName
                },
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess == true) {
                        var Data = JSON.parse(response.Data);//.split(",");
                        $("#lblTotSuccess").html(Data["Success"]);
                        $("#lblTotFailed").html(Data["Failed"]);
                        $("#hdnresultFile").val(Data["FileName"]);
                        $("#Uploaddialog").modal("hide");
                        OpenModal("log", 500, "Result");
                        BindGrid();
                    }
                    else {
                        //FailResponse(response);
                        alert(response.Message);
                    }
                    $("#dvDetails").show();
                }
            });
        });


        function DownLoadSample() {
            var URL = DownLoadSampleURL + '?TableName=IVAP_MST_BANK &ActionName=ViewBank&SampleName=BankMaster.xlsx';
            window.location = URL;
            return false;
        }
        function DownLoadResultFile() {
            var FileName = $("#hdnresultFile").val();
            var Data = { FileName: FileName };
            var URL = DownLoadResultFileURL + '?FileName=' + FileName;
            window.location = URL;
            return false;
        }

        //Uploader End




var Kgrid = "";
        function BindGrid() {
            var BankID = 0;
            $.get(getBankURL, { BankID: BankID }, function (response) {
                if (Kgrid != "") {
                    $('#Kgrd').kendoGrid('destroy').empty();
                }
                var GridColumns = [
                    { field: "ENTITY_NAME", title: "Entity Name", width: 200 },
                    { field: "BANK_NAME", title: '@Model.BANK_NAME_TEXT', width: 150 },
                    { field: "IFSC", title: '@Model.IFSC_Code_TEXT', width: 110 },
                    { field: "BANK_ADDR", title: '@Model.BANK_ADDR_TEXT', width: 150 },
                     { field: "BANK_CITY", title: '@Model.BANK_CITY_TEXT', width: 130 },
                    { field: "STATE_NAME", title: '@Model.BANK_STATE_TEXT', width: 130 },
                   // { field: "BANK_STATE", title: "Bank Code", width: 130 },
                    //{ field: "BANK_PIN", title: '@Model.BANK_PIN_TEXT', width: 150 },
                    //{ field: "BANK_PHONE", title: '@Model.BANK_PHONE_TEXT', width: 130 },
                    { field: "STATUS", title: '@Model.ISACTIVE_TEXT', width: 100, template: "<span class= #if(STATUS=='Active'){#'BtnApproved Setlabel'#}else{#'BtnGray Setlabel'# }#   >#:STATUS#</span>" },
               
                ];
                if (response.Command != null) {
                    for (var i = 0; i < response.Command.command.length; i++) {
                        if (response.Command.command[i].name == "Edit")
                            response.Command.command[i].click = EditHandler;
                        else if (response.Command.command[i].name == "View")
                            response.Command.command[i].click = ViewHandler;
                    }
                    GridColumns.push(response.Command);
                }
                Kgrid = $("#Kgrd").kendoGrid({
                    dataSource: {
                        pageSize: 15,
                        data: JSON.parse(response.Data)
                    },
                    pageable: { pageSizes: true },
                    height: 400,
                    filterable: true,
                    noRecords: true,
                    resizable: true,
                    //reorderable: true,
                    dataBound: ShowToolTip,
                    sortable: true,
                    columns: GridColumns,
                });

            });

        }



function SuccessMessage(res) {
    if ($("#hdnBankID").val() > 0)
        $("#dvAddUpdateBank").modal('hide');
    HandleSuccessMessage(res, "btnReset");
    BindGrid();
}
function FailMessage() {
    // alert("Fail Post");
}
function Validate() {
    return true;
}


var ViewHandler = function ViewHandler(e) {
    e.preventDefault();
    dataItem = this.dataItem($(e.currentTarget).closest("tr"));
    var BankID = dataItem.TID;
    $.get(getBankURL, { BankID: BankID }, function (response) {

        var Data = $.parseJSON(response.Data);
        $("#lblBANKName").html(htmlEncode(Data[0].BANK_NAME));
      //  $("#lblBankCode").html(htmlEncode(Data[0].BANK_CODE));
        $("#lblBANK_ADDR").html(htmlEncode(Data[0].BANK_ADDR));
        $("#lblSTATE_NAME").html(htmlEncode(Data[0].STATE_NAME));
        $("#lblBANK_CITY").html(Data[0].BANK_CITY);
        $("#lblEntityName").html(htmlEncode(Data[0].ENTITY_NAME));
        $("#lblBANK_PIN").html(htmlEncode(Data[0].BANK_PIN));
        $("#lblBANK_PHONE").html(Data[0].BANK_PHONE);
        $("#lblERP_BANK_CODE").html(htmlEncode(Data[0].ERP_BANK_CODE));
        $("#lblPAY_BANK_CODE").html(htmlEncode(Data[0].PAY_BANK_CODE));
        $("#lblIFSC_Code").html(Data[0].IFSC);
        var IsAct = Data[0].ISACTIVE;
        (IsAct == 1) ? $('#lblStatus').html('Active') : $('#lblIsAct').html('In Active');
        HistoryGridData(BankID);
    });
}

//function DownLoadAll() {

//    var URL = DownloadAllMapppingUserUrl
//    window.location = URL;
//    return false;
//}


    function HistoryGridData(BankID) {
    $.ajax({
        type: "GET",
        url: getBankHistoryURL,
        contentType: "application/json; charset=utf-8",
        data: { "BankID": BankID },
        dataType: "json",
        success: function (response) {
            HistorybindGrid(response.Data);
            OpenModal("tab", 910, "Bank");
        },
        error: function (data) {
            alert("something went wrong");
        }
    });
}

var histkgrid = "";
function HistorybindGrid(Data1) {
    if (histkgrid != "") {
        $('#kgrdHistory').kendoGrid('destroy').empty();
    }
    histkgrid = $("#kgrdHistory").kendoGrid({
        dataSource: {
            pageSize: 10,
            data: JSON.parse(Data1)
        },
        columns: [
                  { field: "ENTITY_NAME", title: "Entity Name", width: 150 },
                    { field: "BANK_NAME", title: '@Model.BANK_NAME_TEXT', width: 150 },
                    { field: "IFSC", title: '@Model.IFSC_Code_TEXT', width: 130 },
                    { field: "BANK_ADDR", title: '@Model.BANK_ADDR_TEXT', width: 150 },
                     { field: "BANK_CITY", title: '@Model.BANK_CITY_TEXT', width: 130 },
                    { field: "STATE_NAME", title: '@Model.BANK_STATE_TEXT', width: 130 },
                   // { field: "BANK_STATE", title: "Bank Code", width: 130 },
                    { field: "BANK_PIN", title: '@Model.BANK_PIN_TEXT', width: 150 },
                    { field: "BANK_PHONE", title: '@Model.BANK_PHONE_TEXT', width: 130 },
                       //  { field: "UPDATE_ON", title: "Updated On", width: 120 },
                       //{ field: "CREATE_ON", title: "Created On", width: 120 },
                       { field: "ACTION", title: "Action", width: 100 },
        ],
        dataBound: function (e) {
            var grid = e.sender;
            if (grid.dataSource.total() == 0) {
                var colCount = grid.columns.length;
                //$(e.sender.wrapper)
                //    .find('tbody')
                //    .append('<tr class="kendo-data-row"><td colspan="' + colCount + '" class="no-data"><span style="margin-left:46%;">No data found.</span></td></tr>');
            }
            else {
                var rows = grid.dataSource.total();
                var colCount = grid.columns.length;
                for (var i = rows - 1; i > 0 ; i--) {
                    for (var k = 0; k < colCount; k++) {

                        if (grid.tbody[0].children[i].cells[k].innerText != grid.tbody[0].children[i - 1].cells[k].innerText) {
                            grid.tbody[0].children[i - 1].cells[k].bgColor = "red";
                        }
                    }
                }
            }
        },
        noRecords: true,
        filterable: true,
        sortable: true,
        pageable: true,
        reorderable: true,
        resizable: true,




    });
}


var EditHandler = function EditHandler(e) {
    $("#btnReset").click();
    e.preventDefault();
    dataItem = this.dataItem($(e.currentTarget).closest("tr"));
    var BankID = dataItem.TID;
    $.get(getBankURL, { BankID: BankID }, function (response) {

        var Data = $.parseJSON(response.Data);
        $("#hdnBankID").val(BankID);
       // $("#BANK_CODE").val(htmlEncode(Data[0].BANK_CODE));
        $("#BANK_NAME").val(htmlEncode(Data[0].BANK_NAME));
        $("#BANK_ADDR").val(htmlEncode(Data[0].BANK_ADDR));
        $("#BANK_CITY").val(htmlEncode(Data[0].BANK_CITY));
        $("#BANK_STATE").val(htmlEncode(Data[0].BANK_STATE));
        $("#BANK_PIN").val(htmlEncode(Data[0].BANK_PIN));
        $("#BANK_PHONE").val(htmlEncode(Data[0].BANK_PHONE));
        $("#ERP_BANK_CODE").val(htmlEncode(Data[0].ERP_BANK_CODE));
        $("#PAY_BANK_CODE").val(htmlEncode(Data[0].PAY_BANK_CODE));
        $("#IFSC_Code").val(htmlEncode(Data[0].IFSC));
        var IsAct = Data[0].ISACTIVE;
        (IsAct == 1) ? $('#IsActive').prop('checked', true) : $('#IsActive').prop('checked', false);
        $("#btnSubmit").val("Update");
        OpenModal("dvAddUpdateBank", 700, "Edit Department");

    });
}


var form = $('#__AjaxAntiForgeryForm');
var token = $('input[name="__RequestVerificationToken"]', form).val();
$("#files").kendoUpload({
    async: {
        //saveUrl: FilesUploadURL,
        removeUrl: "remove",
        autoUpload: true
    },
    upload: function (e) {
        e.data = { __RequestVerificationToken: token, Folder: "Temp" };
    },
    select: function (event) {
        var notAllowed = false;
        $.each(event.files, function (index, value) {
            if (value.extension !== '.xlsx') {
                alert("Plese select a xlsx file only!");
                notAllowed = true;
            }
        });
        var breakPoint = 0;
        if (notAllowed == true) e.preventDefault();
    },
    multiple: false,
    success: onSuccessForUpload,
    remove: onRemoveForUpload,
    showFileList: false
});
        $("#btnUpload").click(function (event) {
            var fileName = $("#hdnFileName").val();
            if (fileName.trim() == "") {
                alert("Please select a CSV file");
                return false;
            }
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();

            var Data = { __RequestVerificationToken: token, FileName: fileName };
    @*url: '@Url.RouteUrl("UploadVendor")',*@
            //Url.RouteUrl(new { controller = "Vendor", action = "UploadVendor" })
            $.ajax({
                type: "POST",
                url: UploadDepartmentURL,
                contentType: "application/x-www-form-urlencoded",

                data: {
                    __RequestVerificationToken: token,
                    FileName: fileName
                },
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess == false) {
                        alert(response.Message);
                    }
                    else {
                        var Data = JSON.parse(response.Data);
                        $("#lblTotSuccess").html(Data["Success"]);
                        $("#lblTotFailed").html(Data["Failed"]);
                        $("#hdnresultFile").val(Data["FileName"]);
                        $("#dvUploadVendor").dialog("close");
                        BindGrid();
                        $("#Uploaddialog").modal('hide');
                        OpenModal("log", 500, "Upload Department");
                    }

                }

            });
        });
        function DownLoadResultFile() {
            var FileName = $("#hdnresultFile").val();
            var Data = { FileName: FileName };
            var URL = DownLoadResultFileURL + '?FileName=' + FileName;
            window.location = URL;
            return false;
        }
        function DownLoadSampleCostCentre() {
            var URL = DownLoadSampleDeptURL;
            window.location = URL;
            return false;
        }
        function OpenUploadPopup() {
            OpenModal("Uploaddialog", 500, "Upload Departemnt");
        }

    </script>

