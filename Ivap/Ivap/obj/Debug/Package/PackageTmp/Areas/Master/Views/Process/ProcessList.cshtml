@model Ivap.Areas.Master.Models.ProcessModel
@{
    ViewBag.Title = "Process List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel panel-default">
    <div class="pull-right VendorSiteBtnRightMain">
        @{Html.RenderAction("RenderMasterButton", "Authorization", new { RouteName = "ProcessList", area = string.Empty });}

    </div>
    <div class="panel-heading"> <h2>Process Master</h2> </div>
    <div class="panel-body">

        <div class="clear20"></div>
        <div class="TextBoxMainOuter">
            <div class="clear"></div>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="row">
                        <div class="clear10"></div>
                        <div class="TableOuterDiv table-responsive">
                            <div id="KgrdProcess"></div>
                        </div>
                    </div>
                    <div class="clear20"></div>
                </div>
            </div>
        </div>
        <div class="clear"></div>
    </div>
</div>

<section class="content">
    <!-- Info boxes -->
    <!-- /.row -->
    <!-- /.box-header -->
    <div id="ProcessDetails" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">@Model.Screen_Name</h4>
                </div>
                <div class="modal-body">
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#tab_1" data-toggle="tab" aria-expanded="true">Detail</a></li>
                            <li class=""><a href="#tab_2" data-toggle="tab" aria-expanded="false">History</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab_1">
                                <table id="example2" class="table table-bordered table-hover">
                                    <tbody>
                                        <tr>
                                            <td><label>Entity Name</label> </td>
                                            <td><span id="lblEntity"> </span></td>
                                            <td><label>@Model.PAY_PROC_CODE_Text</label> </td>
                                            <td><span id="lblPayProcessCode"> </span></td>

                                        </tr>
                                        <tr>
                                            <td><label>@Model.ERP_PROC_CODE_Text</label></td>
                                            <td> <span id="lblErpProcessCode"> </span></td>
                                            <td> <label>@Model.PROC_NAME_Text</label> </td>
                                            <td><span id="lblProcessName"></span></td>
                                        </tr>

                                        <tr>
                                            <td><label>Created On</label></td>
                                            <td><span id="lblCreatedOn"></span> </td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_2">
                                <div id="GridHis"></div>
                            </div>
                            <!-- /.tab-pane -->
                            <!-- /.tab-pane -->
                        </div>
                        <!-- /.tab-content -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="dvProcessAddEdit" class="modal fade PopUpMainDiv" role="dialog">
        <div class="modal-dialog" style="width:500px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <img src="~/Content/images/popup_close.png" alt="Close " />
                    </button>
                    <h4 class="modal-title">@Model.Screen_Name Master</h4>
                </div>
                @using (Ajax.BeginForm("AddUpdateProcess", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SuccessMessage" }))
                {@Html.AntiForgeryToken()
                <div class="modal-body horizontalscroll">
                    <div class="row form-group">
                        @Html.HiddenFor(m => m.TID)
                        <label for="inputPassword3" class="col-sm-4 control-label">@Model.PAY_PROC_CODE_Text<span class="text-red">*</span></label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.PAY_PROC_CODE, new { @class = "form-control", @placeholder = @Model.PAY_PROC_CODE_Text })
                            @Html.ValidationMessageFor(m => m.PAY_PROC_CODE)
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="inputPassword3" class="col-sm-4 control-label">@Model.ERP_PROC_CODE_Text<span class="text-red">*</span></label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.ERP_PROC_CODE, new { @class = "form-control", @placeholder = @Model.ERP_PROC_CODE_Text })
                            @Html.ValidationMessageFor(m => m.ERP_PROC_CODE)
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="inputPassword3" class="col-sm-4 control-label">@Model.PROC_NAME_Text<span class="text-red">*</span></label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.PROC_NAME, new { @class = "form-control", @placeholder = @Model.PROC_NAME_Text })
                            @Html.ValidationMessageFor(m => m.PROC_NAME)
                        </div>
                    </div>
                    <div class="row form-group">
                        <label for="inputPassword3" class="col-sm-4 control-label">@Model.ISACTIVE_TEXT</label>
                        <div class="col-sm-8">
                            @Html.CheckBoxFor(m => m.IsActive)
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="clear"></div>
                <div class="col-md-12">
                    <input type="reset" id="btnReset" value="Reset" class="btn btn-primary BtnWhiteLg BtnWidth150" />
                    <input type="submit" id="btnSubmit" class="btn btn-primary BtnBlueLg BtnWidth150" value="Submit" />
                </div>
                <div class="clear20"></div>
            }
            </div>
        </div>
    </div>

</section>


<div id="Uploaddialog" class="modal fade PopUpMainDiv" role="dialog">
    <div class="modal-dialog" style="width:500px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/Content/images/popup_close.png" alt="Close " />
                </button>
                <h4 class="modal-title">Upload @Model.Screen_Name</h4>
            </div>
            <div class="modal-body">
                <div class="clearfix"></div>
                <div class="row top_content">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        <div class="col-xs-12 col-sm-4 col-md-4">
                            <label>select a XLSX file</label>
                        </div>
                        <div class="col-xs-12 col-sm-8 col-md-8 allcreditionals">
                            <input type="file" name="files" id="files" target-control="hdnFileName">
                            <input type="hidden" id="hdnFileName" />
                        </div>
                        <div class="clear20"></div>
                        <div class="col-xs-12 col-sm-12 col-md-12 allcreditionals">
                            <div class="reset_btn" align="right">
                                <input type="button" value="Sample" id="btnDownloadSample" class="btn btn-primary BtnBlueLg" onclick="DownLoadSample();" />
                                <input type="button" value="Upload" id="btnUpload" class="btn btn-primary BtnBlueLg" />
                            </div>

                        </div>
                        @*</div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="log" class="modal fade PopUpMainDiv" role="dialog">
    <div class="modal-dialog" style="width:500px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/Content/images/popup_close.png" alt="Close " />
                </button>
                <h4 class="modal-title">@Model.Screen_Name Log</h4>
            </div>
            <div class="modal-body">
                <div class="clearfix"></div>
                <div class="row top_content">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        <div class="col-xs-12 col-sm-3 col-md-3 top_content">
                            <label class="headtag">Total Success</label>
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3">
                            <label id="lblTotSuccess" class="feedback_content">500</label>
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3">
                            <label class="headtag">Total Loss</label>
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-3">
                            <label id="lblTotFailed" class="feedback_content">500</label>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="reset_btn" align="right">
                                <input type="hidden" id="hdnresultFile" />
                                <input type="button" value="Download" onclick="DownLoadResultFile();" class="btn btn-primary BtnBlueLg" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}


@section scripts {
    @Scripts.Render("~/Scripts/commanscript")

    <script type="text/javascript">
        var GetProcessURL = "@Url.RouteUrl("GetProcess")"
        var GetProcessHisURL = "@Url.RouteUrl("GetProcessHis")"
          var DownLoadSampleURL = '@Url.RouteUrl("DownLoadSampleForExcel")'
        var FilesUploadURL = "@Url.RouteUrl("ExcelFilesUpload")"
        var UploadProcessDetailsURL = "@Url.RouteUrl("UploadProcessDetails")"
        var DownLoadResultFileURL = '@Url.RouteUrl("DownLoadResultFileForExcel")'
        var DownloadAllProcessURL= '@Url.RouteUrl("DownloadAllProcess")'


        $("#add").click(function (event) {
            $("#btnReset").click();
            //$("#CompID").val(0);
            $("#btnSubmit").val("Submit");
            OpenModal("dvProcessAddEdit", 900, "Add Process");
        });
        $(document).ready(function () {
            $("#li_Master").addClass("active");
            $("#anch_ProcessList").addClass("CurantPageIcon");
            BindProcess();
            $("#dvExport").bind("click", {}, function DownLoadAll() {
                var URL = DownloadAllProcessURL;
                window.location = URL;
                return false;
            });
        });

      
        function SuccessMessage(res) {
            if ($("#TID").val() > 0)
                $("#dvProcessAddEdit").modal('hide');
            HandleSuccessMessage(res, "btnReset");

                BindProcess();
      
        }
        

        //Uploader Code
            $("#dvimport").bind("click", {}, function () {
                OpenModal("Uploaddialog", 500, "Upload Plant");
            });
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $("#files").kendoUpload({
                async: {
                    saveUrl: FilesUploadURL,
                    //removeUrl: "remove",
                    autoUpload: true
                },
                upload: function (e) {
                    e.data = { __RequestVerificationToken: token, Folder: "Temp" };
                },
                select: function (event) {
                    var notAllowed = false;
                    $.each(event.files, function (index, value) {
                        if (value.extension !== '.xlsx') {
                            alert("Plese select a xlsx file only!");
                            notAllowed = true;
                        }
                    });
                    var breakPoint = 0;
                    if (notAllowed == true) e.preventDefault();
                },
                multiple: false,
                success: onSuccessForUpload,
                remove: onRemoveForUpload,
                showFileList: false
            });
        $("#btnUpload").click(function (event) {
            var fileName = $("#hdnFileName").val();
            if (fileName.trim() == "") {
                alert("Please select a xlsx file");
                return false;
            }
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            var Data = { __RequestVerificationToken: token, FileName: fileName };
            $.ajax({
                type: "POST",
                url: UploadProcessDetailsURL,
                contentType: "application/x-www-form-urlencoded",
                //data: Data,
                data: {
                    __RequestVerificationToken: token,
                    FileName: fileName
                },
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess == true) {
                        var Data = JSON.parse(response.Data);//.split(",");
                        $("#lblTotSuccess").html(Data["Success"]);
                        $("#lblTotFailed").html(Data["Failed"]);
                        $("#hdnresultFile").val(Data["FileName"]);
                        $("#Uploaddialog").modal("hide");
                        OpenModal("log", 500, "Result");
                        BindProcess();
                    }
                    else {
                        //FailResponse(response);
                        alert(response.Message);
                    }
                    $("#dvDetails").show();
                }
            });
        });
        

        function DownLoadSample() {
            var URL = DownLoadSampleURL + '?TableName=IVAP_MST_PROCESS &ActionName=ProcessList&SampleName=ProcessMaster.xlsx';
            window.location = URL;
            return false;
        }
        function DownLoadResultFile() {
            var FileName = $("#hdnresultFile").val();
            var Data = { FileName: FileName };
            var URL = DownLoadResultFileURL + '?FileName=' + FileName;
            window.location = URL;
            return false;
            }
        
        //Uploader End



        KgrdProcess = "";
        function BindProcess() {
            $.get(GetProcessURL, { PID: 0 }, function (response) {
                var strResponseProcess = JSON.parse(response.Data)
                if (KgrdProcess != "") {
                    $('#KgrdProcess').kendoGrid('destroy').empty();
                }
                var GridColumns =
                    [
                        { field: "ENTITY_NAME", title: "ENTITY NAME", width: 150 },
                        { field: "PAY_PROC_CODE", title: '@Model.PAY_PROC_CODE_Text', width: 120 },
                        { field: "ERP_PROC_CODE", title: '@Model.ERP_PROC_CODE_Text', width: 120 },
                        { field: "PROC_NAME", title: '@Model.PROC_NAME_Text', width: 120 },
                        { field: "STATUS", title: '@Model.ISACTIVE_TEXT', width: 100, template: "<span class= #if(STATUS=='Active'){#'BtnApproved Setlabel'#}else{#'BtnGray Setlabel'# }#   >#:STATUS#</span>" },

                    ];
               
                if (response.Command != null) {
                    for (var i = 0; i < response.Command.command.length; i++) {
                        if (response.Command.command[i].name == "Edit")
                            response.Command.command[i].click = EditHandler;
                        else if (response.Command.command[i].name == "View")
                            response.Command.command[i].click = ViewHandler;
                    }
                    GridColumns.push(response.Command);
                }

                KgrdProcess = $("#KgrdProcess").kendoGrid({
                    dataSource: {
                        pageSize: 15,
                        data: strResponseProcess
                    },
                    pageable: { pageSizes: true },
                    height: 400,
                    filterable: true,
                    noRecords: true,
                    resizable: true,
                    sortable: true,
                    // dataBound: ShowToolTip,
                    columns: GridColumns
                });
            });
        }


        var EditHandler = function EditHandler(e) {
            $("#btnReset").click();
            e.preventDefault();
            var dataItem = {};
            dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var PID = dataItem.TID;
            $.ajax({
                type: "GET",
                url: GetProcessURL,
                contentType: "application/json; charset=utf-8",
                data: { PID: PID },
                dataType: "json",
                success: function (response) {
                    var data1 = $.parseJSON(response.Data);
                    if (data1.length > 0) {
                        $("#btnSubmit").val("Update");
                        $("#TID").val(data1[0].TID);
                        $("#ENTITY_ID").val(data1[0].ENTITY_ID);
                        $("#PAY_PROC_CODE").val(htmlEncode(data1[0].PAY_PROC_CODE));
                        $("#ERP_PROC_CODE").val(htmlEncode(data1[0].ERP_PROC_CODE));
                        $("#PROC_NAME").val(htmlEncode(data1[0].PROC_NAME));
                      
                        var IsAct = htmlEncode(data1[0].ISACTIVE);
                        (IsAct == 1) ? $('#IsActive').prop('checked', true) : $('#IsActive').prop('checked', false);
                        OpenModal("dvProcessAddEdit", 500, "Update Process");
                    }
                }
            });
        }

        var ViewHandler = function ViewHandler(e) {
            e.preventDefault();
            dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var PID = dataItem.TID;
            $.get(GetProcessURL, { PID: PID }, function (response) {
                var Data = $.parseJSON(response.Data);
                $("#lblEntity").html(htmlEncode(Data[0].ENTITY_NAME));
                $("#lblPayProcessCode").html(htmlEncode(Data[0].ERP_PROC_CODE));
                $("#lblErpProcessCode").html(htmlEncode(Data[0].PAY_PROC_CODE));
                $("#lblProcessName").html(htmlEncode(Data[0].PROC_NAME));
                $("#lblCreatedOn").html(htmlEncode(Data[0].CREATED_ON));
              //  OpenModal("ProcessDetails", 909, "Process Details");
                HistoryGridData(PID)
            });
        }
        ////Start


        //  function HistoryGridData(LEAVID) {
        //   // alert("History Grid");
        //    $.ajax({
        //        type: "GET",
        //        url: GetLeavingReasonHisURL,
        //        contentType: "application/json; charset=utf-8",
        //        data: { "LEAVID": LEAVID },
        //        dataType: "json",
        //        success: function (response) {
        //            if (response.IsSuccess) {
        //                HistorybindGrid(response.Data);
        //                OpenModal("LeavingReasonDetails", 909, "Leaving Reason Details");
        //            }
        //            else {
        //                FailResponse(response);
        //            }
        //        }
        //    });
        //}
        var histkgrid = "";

        function HistoryGridData(PID) {
            $.ajax({
                type: "GET",
                url: GetProcessHisURL,
                contentType: "application/json; charset=utf-8",
                data: { "PID": PID },
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess) {
                        if (histkgrid != "") {
                            $('#GridHis').kendoGrid('destroy').empty();
                        }
                        histkgrid = $("#GridHis").kendoGrid({
                            dataSource: {
                                //pageSize: 10,
                                data: JSON.parse(response.Data)
                            },
                            columns: [
                              
                                { field: "ENTITY_NAME", title: "ENTITY NAME", width: 150 },
                                { field: "PROC_NAME", title: '@Model.PROC_NAME_Text', width: 150 },
                                { field: "PAY_PROC_CODE", title: '@Model.PAY_PROC_CODE_Text', width: 200 },
                                { field: "ERP_PROC_CODE", title: '@Model.ERP_PROC_CODE_Text', width: 120 },                            
                                { field: "UPDATED_ON", title: "UPDATED", width: 120 },
                                { field: "ACTION", title: "Action", width: 100 },
                            ],
                            dataBound: function (e) {
                                var grid = e.sender;
                                if (grid.dataSource.total() != 0) {
                                    var rows = grid.dataSource.total();
                                    var colCount = grid.columns.length;
                                    for (var i = rows - 1; i > 0; i--) {
                                        for (var k = 0; k < colCount; k++) {
                                            if (grid.tbody[0].children[i].cells[k].innerText != grid.tbody[0].children[i - 1].cells[k].innerText) {
                                                grid.tbody[0].children[i - 1].cells[k].bgColor = "red";
                                            }
                                        }
                                    }
                                }
                            },
                            pageable: false,
                            height: 350,
                            sortable: true,
                            resizable: true,
                            noRecords: true
                        });
                        $("#GridHis .k-grid-content.k-auto-scrollable").css("height", "272px");
                        OpenModal("ProcessDetails", 909, "Process Details");
                    }
                    else {
                        FailResponse(response);
                    }
                }
            });
        }


        //End

    </script>
}

