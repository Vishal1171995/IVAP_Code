@model Ivap.Areas.InputProcessing.Models.UploadInputModel
@using Ivap.Repository;
@{
    ViewBag.Title = "UploadInput";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel panel-default">
    <div class="panel-heading"> <h2>File Upload Wizard</h2> </div>
    <div class="panel-body">
        <div class="TextBoxMainOuter">
            <div class="clear"></div>
            <div class="row">

                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="clear20"></div>
                    <div class="row">
                        <div>
                            <label for="File Type" class="col-md-2 mg-top15">File Type:</label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(m => m.FileID, new SelectList(Model.FileList, "Value", "Text", 0), new { @class = "selectpicker mg - 0" })
                            </div>
                        </div>
                        <div id="DownloadSample" style="display:none">
                            <div>

                                <span  class="col-sm-2 mg-top15"> <i class="fa fa-download" data-toggle="tooltip" title="Download Sample" id="ExportSample" style="cursor: pointer; margin-right:10px"></i>  <label for="Download Sample">Select Sample</label></span>
                                <div class="col-md-3">
                                    <div class="demo-section k-content kendo-multiselect">
                                        <input type="file" id="files" name="files" target-control="System_Document" target-control-orignal="Original_Document_Name" />
                                        @Html.HiddenFor(m => m.System_Document)
                                        @Html.HiddenFor(m => m.Original_Document_Name)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2 mg-top7">
                                <button type="button" class="btn btn-primary" id="BtnImportExcel">Upload </button>
                            </div>
                        </div>
                        <div class="clear30"></div>
                        <div class="row" id="Log" style="display:none">
                            @*style="display:none"*@
                            <div class="col-md-6">
                                <div class="alert alert-success fade in alert-dismissible">
                                    <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close"></a>
                                    <span id="LogText"><strong></strong></span>
                                    <span id="LogSuccess"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <button type="button" id="btnValidate" class="btn btn-primary BtnBlueLg">validate</button>
                            </div>
                        </div>
                    </div>
                    <div class="clear20"></div>
                    <div class="row">
                        @*   <div class="clear40"></div>*@
                        @*<div class="col-md-8 col-sm-8 col-xs-12">
            <div class="donut-wrapper">
                <div id="Validationchart" class="donut-chart"></div>
            </div>

        </div>*@
                        <div style="width:700px;margin-left:150px">
                            <div id="Validationchart" style="width:577px"></div>
                            <div id="divtotalSucess" class="inner-content-1"></div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">

                        </div>
                    </div>
                    <div class="row">
                        <div class="pull-right VendorSiteBtnRightMain" style="display:none" id="DivApprval">
                            <button type="button" id="btnSendtoApproval" class="btn btn-primary BtnBlueLg BtnWidth150">Send To Approval</button> 
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="clear"></div>
    </div>
</div>


<div class="modal fade PopUpMainDiv popupindex" id="dvSuccess" role="dialog">
    <div class="modal-dialog " style="width:30%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" id="ColourModel">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/Content/images/popup_close.png" alt="Close " />
                </button>
                <h4 class="modal-title" id="ModalHeadingSuccess"></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="block-trip mg-0">
                            <span id="spnSuccess"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade PopUpMainDiv popupindex" id="dvError" role="dialog">
    <div class="modal-dialog " style="width:30%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header error-header">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/Content/images/popup_close.png" alt="Close " />
                </button>
                <h4 class="modal-title" id="ModalHeadingError"></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="block-trip mg-0">
                            <span id="spnError"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
<style>
    .inner-content-1 {
        position: absolute;
        top: 69%;
        left: 32%;
        width: 100px;
        height: 100px;
        margin-top: 0px;
        margin-left: 13px;
        font-size: 14px;
        font-weight: bold;
        vertical-align: middle;
        text-align: center;
        color: #000000;
    }

</style>
@section scripts {
    @Scripts.Render("~/Scripts/commanscript")



    <script type="text/javascript">
    //UploadInputDetailsURL
            var UploadInputSampleURL = "@Url.RouteUrl("UploadInputSample")"
            var UploadInputDetailsURL = "@Url.RouteUrl("UploadInputDetails")"
            var FilesUploadURL = "@Url.RouteUrl("ExcelFilesUpload")"
        var ValidateInputData = "@Url.RouteUrl("ValidateInputData")";
            $("#ExportSample").click(function () {
                var FileID = $("#FileID").val();
                var File_Name = $("#FileID :selected").text();
                if (FileID != 0) {
                    var URL = UploadInputSampleURL + '?FileID=' + FileID + ' &File_Name=' + File_Name + '';
                    window.location = URL;
                }
                else {
                    alert("select file");
                }

        });

        $(document).ready(
            function () {
                //$("#Log").hide();
                         var FileID = $("#FileID").val();
                         if (FileID > 0) {
                             $("#DownloadSample").show();
                         }
                         else {
                             $("#DownloadSample").hide();
                         }
            });
        $("#FileID").change(function () {
            var FileID = $("#FileID").val();
          // $("#Log").hide();
            if (FileID > 0) {
                $("#DownloadSample").show();
            }
            else {
                $("#DownloadSample").hide();
            }

        })

            $("#BtnImportExcel").click(function (event) {
                var fileName = $("#System_Document").val();
                var fileID = $("#FileID").val();
                if (fileID == 0 || fileID == null) {
                    alert("Select file");
                    return false;
                }
                if (fileName.trim() == "") {
                    alert("Please select a xlsx or xls file");
                    return false;
                }
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var Data = { __RequestVerificationToken: token, FileName: fileName };

                $.ajax({
                    type: "POST",
                    url: UploadInputDetailsURL,
                    contentType: "application/x-www-form-urlencoded",
                    data: {
                        __RequestVerificationToken: token,
                        FileName: fileName,
                        FileID: fileID
                    },
                    dataType: "json",
                    success: function (response) {
                        if (response.IsSuccess == true) {

                            $("#Log").show();
                            $("#LogText").html(response.SuccessCount + '  Record Uploded');
                            $("#LogSuccess").html(' Your BatchNuber is :' + response.BatchNumber);
                        }
                        else {
                            //FailResponse(response);
                            //alert(response.Message);ColourModel
                            $("#dvError").modal("show");
                            $("#ModalHeadingError").html("Error");
                            $("#spnError").html(response.Message);
                        }

                    }
                });

            });
            ////

        $("#files").kendoUpload({
                async: {
                    saveUrl: FilesUploadURL,
                    removeUrl: "@Url.RouteUrl("RemoveFiles")",
                    autoUpload: true

                },
                upload: function (e) {
                    var form = $('#__AjaxAntiForgeryForm');
                    var token = $('input[name="__RequestVerificationToken"]', form).val();
                    e.data = { __RequestVerificationToken: token, Folder: "Temp" };
                }, select: function (event) {
                },
                remove: function (e) {
                    e.data = { __RequestVerificationToken: token, Folder: "Temp", System_FileName: e.files[0].System_FileName };
                },
                select: function (event) {
                    var notAllowed = false;
                    $.each(event.files, function (index, value) {
                        if (value.extension == ".xls" || value.extension == ".xlsx") {

                        }
                        else {
                            alert("Plese select a xlsx or xls file only!");
                            notAllowed = true;
                        }
                    });
                    var breakPoint = 0;
                    if (notAllowed == true) e.preventDefault();
                },
                multiple: false,
                success: onSuccessForUpload,
                 remove: onRemoveForUploadInput,
                showFileList: true
        });
        function onRemoveForUploadInput(e) {
            var name = this.name;
            var target = $("#" + name).attr("target-control");
            $("#" + target).val("");
        }
        var SuccessCount= 0;
          //////////////
        $("#btnValidate").click(function (event) {
            var fileID = $("#FileID").val();
            if (fileID == 0 || fileID == null) {
                alert("Select file");
                return false;
            }

            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            // var Data = { __RequestVerificationToken: token, FileName: fileName };

            $.ajax({
                type: "POST",
                url: ValidateInputData,
                contentType: "application/x-www-form-urlencoded",
                data: {
                    __RequestVerificationToken: token,
                    FileID: fileID
                },
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess == true) {
                        var jsondata = $.parseJSON(response.Data);
                        if (jsondata.ReqValFailCount > 0 || jsondata.MasterValFailCount > 0 || jsondata.DataFormateValFailCount > 0 || jsondata.DateFormateValFailCount > 0) {
                          
                        }
                        else {

                        }

                        $("#Validationchart").kendoChart({
                            theme: "Fiori",
                            legend: {
                                visible: false
                            },

                            seriesDefaults: {
                                type: "donut",
                                labels: {
                                    font: "bold 14px black Arial;",
                                    position: "outsideEnd"
                                },
                                //  holeSize: 40,
                                startAngle: 150

                            },
                            series: [{
                                name: "Total",
                                data: [{ "category": "Total Success", "value": parseFloat(jsondata.SuccessCount).toFixed(2), "color": "#7CFC00	" }, { "category": "Required Error", "value": parseFloat(jsondata.ReqValFailCount).toFixed(2), "color": "#8B0000" }, { "category": "Master Valued Error", "value": parseFloat(jsondata.MasterValFailCount).toFixed(2), "color": "#FFA07A" }, { "category": "DataFormat Error", "value": parseFloat(jsondata.DataFormateValFailCount).toFixed(2), "color": "#CD5C5C" }, { "category": "DateFormat Error", "value": parseFloat(jsondata.DateFormateValFailCount).toFixed(2), "color": "#B22222" }],
                                labels: { visible: true, background: "transparent", template: "#= category # \n #= kendo.format('{0}', value )#%" /*template: "#= value#%"*/ }
                            }],
                            tooltip: {
                                visible: true,
                              //  template: "#= category # (#= series.name #): #= value #"
                                template: "#= category # - #= kendo.format('{0}', value ) #%"
                            },
                            chartArea: {
                               // margin: 0,
                                background: "",
                             //   padding: 0,
                                //width: 270,
                               // height: 345 /* add this option */
                            },
                            plotArea: { margin: 1 },
                            seriesClick: onSeriesClick
                        });
                        var total = 0;
                        var data = [{ "category": "Total Success", "value": parseFloat(jsondata.SuccessCount).toFixed(2), "color": "#414042" },{ "category": "Required Error", "value": parseFloat(jsondata.ReqValFailCount).toFixed(2), "color": "#50b432" }, { "category": "Master Valued Error", "value": parseFloat(jsondata.MasterValFailCount).toFixed(2), "color": "#ed2e1b" }, { "category": "DataFormat Error", "value": parseFloat(jsondata.DataFormateValFailCount).toFixed(2), "color": "#ffc107" }, { "category": "DateFormat Error", "value": parseFloat(jsondata.DateFormateValFailCount).toFixed(2), "color": "#3f2eff" }];
                        // var text = parseFloat(jsondata.SuccessCount).toFixed(2)+"%";
                        var text = jsondata.TotalCount;
                        SuccessCount = parseFloat(jsondata.SuccessCount).toFixed(2);
                        $("#divtotalSucess").text(text);

                        //var total = 0;
                        //var data = [{ "category": "Required Error", "value": parseFloat(jsondata.ReqValFailCount).toFixed(2), "color": "#50b432" }, { "category": "Master Valued Error", "value": parseFloat(jsondata.MasterValFailCount).toFixed(2), "color": "#ed2e1b" }, { "category": "DataFormat Error", "value": parseFloat(jsondata.DataFormateValFailCount).toFixed(2), "color": "#ffc107" }, { "category": "DateFormat Error", "value": parseFloat(jsondata.DateFormateValFailCount).toFixed(2), "color": "#3f2eff" }];
                        //$.each(data, function (key, values) {
                        //    total += values.value;
                        //});
                        //var text = total;
                        OpenModal("log", 500, "Result");
                         
                        $("#DivApprval").show();
                       
                    }
                    else {
                        //FailResponse(response);
                        alert(response.Message);
                    }

                }
            });

        });
        ///////////////

        var onSeriesClick = function onSeriesClick(e) {
            e.preventDefault();
           // var URL = File_ID_DownloadURL + '?FILE_ID=' + FILE_ID;
            window.location = "@Url.RouteUrl("ErrorFileDownload")";
        }
        $("#btnSendtoApproval").click(function (event) {

            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();

            $.ajax({
                type: "POST",
                url: "@Url.RouteUrl("SendToApproval")",
                contentType: "application/x-www-form-urlencoded",
                data: {
                    __RequestVerificationToken: token,
                },
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess == true) {
                        HandleSuccessMessage(response);
                    }
                    else {
                        //FailResponse(response);
                        alert(response.Message);
                    }

                }
            });

        });
        ////////////////////////

    </script>
}